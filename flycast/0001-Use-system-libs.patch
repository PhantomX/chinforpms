From d92cadce75c822410aba0728b2450f52a70ef172 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sun, 26 Jul 2020 05:02:21 -0300
Subject: [PATCH] Use system libs

---
 CMakeLists.txt                | 37 +++++++++++++++++++++++++++++++++--
 core/imgread/chd.cpp          |  4 ++++
 core/rend/vulkan/compiler.cpp |  4 ++++
 core/rend/vulkan/shaders.h    |  4 ++++
 4 files changed, 47 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index bbbee4c..986443d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,8 @@ option(ENABLE_OPROFILE "Enable OProfile" OFF)
 option(TEST_AUTOMATION "Enable test automation" OFF)
 option(ENABLE_LOG "Enable full logging" OFF)
 option(ASAN "Enable address sanitizer" OFF)
+OPTION(USE_SYSTEM_CHDR "Dynamically link against system libchdr" OFF)
+OPTION(USE_SYSTEM_SPIRV "Dynamically link against system glslang/spirv" OFF)
 
 project(flycast)
 
@@ -89,17 +91,38 @@ else()
     target_compile_definitions(${PROJECT_NAME} PRIVATE TARGET_NO_OPENMP)
 endif()
 
+find_package(PkgConfig QUIET)
+
+pkg_search_module(XXHASH REQUIRED libxxhash)
+if(XXHASH_FOUND)
+    message(STATUS "Using system xxhash")
+    target_include_directories(${PROJECT_NAME} PRIVATE ${XXHASH_INCLUDE_DIRS})
+    target_link_libraries(${PROJECT_NAME} PRIVATE ${XXHASH_LIBRARIES})
+else()
 option(BUILD_SHARED_LIBS "Build shared library" OFF)
 set(XXHASH_BUILD_XXHSUM OFF CACHE BOOL "Build the xxhsum binary")
 add_subdirectory(core/deps/xxHash/cmake_unofficial)
 target_link_libraries(${PROJECT_NAME} PRIVATE xxHash::xxhash)
+endif()
 
+find_package(glm)
+if(NOT glm_FOUND)
 option(BUILD_SHARED_LIBS "Build shared library" OFF)
 add_subdirectory(core/deps/glm)
 target_link_libraries(${PROJECT_NAME} PRIVATE glm::glm)
+endif()
 
+if(USE_SYSTEM_SPIRV)
+    pkg_search_module(GLSLANG REQUIRED glslang)
+    pkg_search_module(SPIRV REQUIRED spirv)
+    message(STATUS "Using system glslang/spirv")
+    target_compile_definitions(${PROJECT_NAME} PRIVATE USE_SYSTEM_SPIRV)
+    target_include_directories(${PROJECT_NAME} PRIVATE ${GLSLANG_INCLUDE_DIRS} ${SPIRV_INCLUDE_DIRS})
+    target_link_libraries(${PROJECT_NAME} PRIVATE ${GLSLANG_LIBRARIES} ${SPIRV_LIBRARIES})
+else()
 add_subdirectory(core/deps/glslang)
 target_link_libraries(${PROJECT_NAME} PRIVATE SPIRV)
+endif()
 
 find_package(ALSA QUIET)
 if(ALSA_FOUND)
@@ -159,7 +182,6 @@ else()
     target_link_libraries(${PROJECT_NAME} PRIVATE zlibstatic)
 endif()
 
-find_package(PkgConfig QUIET)
 if(PKG_CONFIG_FOUND)
     pkg_search_module(AO ao)
     if(AO_FOUND)
@@ -168,11 +190,13 @@ if(PKG_CONFIG_FOUND)
         target_link_libraries(${PROJECT_NAME} PRIVATE ${AO_LIBRARIES})
     endif()
 
+    if(NOT USE_SYSTEM_CHDR)
     pkg_search_module(FLAC flac)
     if(FLAC_FOUND)
         target_include_directories(${PROJECT_NAME} PRIVATE ${FLAC_INCLUDE_DIRS})
         target_link_libraries(${PROJECT_NAME} PRIVATE ${FLAC_LIBRARIES})
     endif()
+    endif()
 
     pkg_search_module(LIBEVDEV libevdev)
     if(LIBEVDEV_FOUND)
@@ -243,6 +267,14 @@ target_sources(${PROJECT_NAME} PRIVATE
         core/deps/chdpsr/cdipsr.h)
 
 target_compile_definitions(${PROJECT_NAME} PRIVATE CHD5_FLAC CHD5_LZMA)
+
+if(USE_SYSTEM_CHDR)
+    pkg_search_module(CHDR REQUIRED libchdr)
+    message(STATUS "Using shared libchdr")
+    target_compile_definitions(${PROJECT_NAME} PRIVATE USE_SYSTEM_CHDR)
+    target_include_directories(${PROJECT_NAME} PRIVATE ${CHDR_INCLUDE_DIRS})
+    target_link_libraries(${PROJECT_NAME} PRIVATE ${CHDR_LIBRARIES})
+else()
 target_sources(${PROJECT_NAME} PRIVATE
         core/deps/chdr/bitstream.c
         core/deps/chdr/bitstream.h
@@ -255,6 +287,7 @@ target_sources(${PROJECT_NAME} PRIVATE
         core/deps/chdr/flac.h
         core/deps/chdr/huffman.c
         core/deps/chdr/huffman.h)
+endif()
 
 target_sources(${PROJECT_NAME} PRIVATE
         core/deps/coreio/coreio.cpp
diff --git a/core/imgread/chd.cpp b/core/imgread/chd.cpp
index 3a55f80..79fabda 100644
--- a/core/imgread/chd.cpp
+++ b/core/imgread/chd.cpp
@@ -1,6 +1,10 @@
 #include "common.h"
 
+#ifdef SYSTEM_CHDR
+#include <chd.h>
+#else
 #include "deps/chdr/chd.h"
+#endif
 
 /* tracks are padded to a multiple of this many frames */
 const uint32_t CD_TRACK_PADDING = 4;
diff --git a/core/rend/vulkan/compiler.cpp b/core/rend/vulkan/compiler.cpp
index ea644b4..485ecd3 100644
--- a/core/rend/vulkan/compiler.cpp
+++ b/core/rend/vulkan/compiler.cpp
@@ -19,7 +19,11 @@
     along with Flycast.  If not, see <https://www.gnu.org/licenses/>.
 */
 #include "compiler.h"
+#ifdef USE_SYSTEM_SPIRV
+#include <glslang/SPIRV/GlslangToSpv.h>
+#else
 #include "SPIRV/GlslangToSpv.h"
+#endif
 #include "vulkan_context.h"
 
 static const TBuiltInResource DefaultTBuiltInResource = {
diff --git a/core/rend/vulkan/shaders.h b/core/rend/vulkan/shaders.h
index ddb7b78..92b184f 100644
--- a/core/rend/vulkan/shaders.h
+++ b/core/rend/vulkan/shaders.h
@@ -20,7 +20,11 @@
 */
 #pragma once
 #include "vulkan.h"
+#ifdef USE_SYSTEM_SPIRV
+#include <glslang/SPIRV/GlslangToSpv.h>
+#else
 #include "SPIRV/GlslangToSpv.h"
+#endif
 
 #include <glm/glm.hpp>
 #include <map>
-- 
2.26.2

