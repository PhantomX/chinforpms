From 2d22cce3ff3721102d1fea967c44084500a14de1 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Wed, 21 Apr 2021 21:15:55 -0300
Subject: [PATCH] fix build with gcc11

An offsetof expression must evaluate to an address constant
https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95942
---
 src/core/cpu_recompiler_code_generator.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/core/cpu_recompiler_code_generator.cpp b/src/core/cpu_recompiler_code_generator.cpp
index 89f7531..0a240c7 100644
--- a/src/core/cpu_recompiler_code_generator.cpp
+++ b/src/core/cpu_recompiler_code_generator.cpp
@@ -2620,7 +2620,7 @@ Value CodeGenerator::DoGTERegisterRead(u32 index)
 
     default:
     {
-      EmitLoadCPUStructField(value.host_reg, RegSize_32, offsetof(State, gte_regs.r32[index]));
+      EmitLoadCPUStructField(value.host_reg, RegSize_32, offsetof(State, gte_regs.r32) + sizeof(State::gte_regs.r32[0]) * index);
     }
     break;
   }
@@ -2649,7 +2649,7 @@ void CodeGenerator::DoGTERegisterWrite(u32 index, const Value& value)
     {
       // sign-extend z component of vector registers
       Value temp = ConvertValueSize(value.ViewAsSize(RegSize_16), RegSize_32, true);
-      EmitStoreCPUStructField(offsetof(State, gte_regs.r32[index]), temp);
+      EmitStoreCPUStructField(offsetof(State, gte_regs.r32) + sizeof(State::gte_regs.r32[0]) * index, temp);
       return;
     }
     break;
@@ -2662,7 +2662,7 @@ void CodeGenerator::DoGTERegisterWrite(u32 index, const Value& value)
     {
       // zero-extend unsigned values
       Value temp = ConvertValueSize(value.ViewAsSize(RegSize_16), RegSize_32, false);
-      EmitStoreCPUStructField(offsetof(State, gte_regs.r32[index]), temp);
+      EmitStoreCPUStructField(offsetof(State, gte_regs.r32) + sizeof(State::gte_regs.r32[0]) * index, temp);
       return;
     }
     break;
@@ -2704,7 +2704,7 @@ void CodeGenerator::DoGTERegisterWrite(u32 index, const Value& value)
     default:
     {
       // written as-is, 2x16 or 1x32 bits
-      EmitStoreCPUStructField(offsetof(State, gte_regs.r32[index]), value);
+      EmitStoreCPUStructField(offsetof(State, gte_regs.r32) + sizeof(State::gte_regs.r32[0]) * index, value);
       return;
     }
   }
-- 
2.31.1

