From 96bd9e6b59cdcbd6e662eda0a3c25eb4b3af4431 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 1 Aug 2022 15:42:10 -0300
Subject: [PATCH] Use system libraries

---
 dep/CMakeLists.txt                | 95 ++++++++++++++++++++++++++++++-
 src/core/texture_replacements.cpp |  2 +
 2 files changed, 94 insertions(+), 3 deletions(-)

diff --git a/dep/CMakeLists.txt b/dep/CMakeLists.txt
index 438c8a1..d9286e6 100644
--- a/dep/CMakeLists.txt
+++ b/dep/CMakeLists.txt
@@ -1,28 +1,92 @@
+find_package(fmt 10.1)
+if(fmt_FOUND)
+  message(STATUS "Using the system fmt")
+  add_library(fmt INTERFACE)
+  target_link_libraries(fmt INTERFACE fmt::fmt)
+else()
 set(FMT_INSTALL OFF CACHE BOOL "")
 add_subdirectory(fmt EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(fmt)
+endif()
+pkg_search_module(minizip IMPORTED_TARGET minizip)
+if(minizip_FOUND)
+  message(STATUS "Using the system minizip")
+  add_library(minizip INTERFACE)
+  target_link_libraries(minizip INTERFACE PkgConfig::minizip)
+else()
 add_subdirectory(minizip EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(minizip)
+endif()
+pkg_search_module(libchdr IMPORTED_TARGET libchdr)
+if(libchdr_FOUND)
+  message(STATUS "Using the system libchdr")
+  add_library(libchdr INTERFACE)
+  target_link_libraries(libchdr INTERFACE PkgConfig::libchdr)
+else()
 add_subdirectory(lzma EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(lzma)
 add_subdirectory(libchdr EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(libchdr)
+endif()
+pkg_search_module(xxhash IMPORTED_TARGET libxxhash)
+if(xxhash_FOUND)
+  message(STATUS "Using the system libxxhash")
+  add_library(xxhash INTERFACE)
+  target_compile_definitions(xxhash INTERFACE SYSTEM_XXHASH=1)
+  target_link_libraries(xxhash INTERFACE PkgConfig::xxhash)
+else()
 add_subdirectory(xxhash EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(xxhash)
+endif()
+pkg_search_module(rapidjson IMPORTED_TARGET RapidJSON)
+if(rapidjson_FOUND)
+  message(STATUS "Using the system rapidjson")
+  add_library(rapidjson INTERFACE)
+  target_link_libraries(rapidjson INTERFACE PkgConfig::rapidjson)
+else()
 add_subdirectory(rapidjson EXCLUDE_FROM_ALL)
+endif()
 add_subdirectory(glslang EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(glslang)
 add_subdirectory(imgui EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(imgui)
 add_subdirectory(simpleini EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(simpleini)
+find_package(VulkanHeaders)
+if(VulkanHeaders_FOUND)
+  message(STATUS "Using the system vulkan-headers")
+  add_library(vulkan-headers INTERFACE)
+  target_link_libraries(vulkan-headers INTERFACE Vulkan::Headers)
+else()
 add_subdirectory(vulkan EXCLUDE_FROM_ALL)
+endif()
+pkg_search_module(soundtouch IMPORTED_TARGET soundtouch)
+if(soundtouch_FOUND)
+  message(STATUS "Using the system soundtouch")
+  add_library(soundtouch INTERFACE)
+  target_link_libraries(soundtouch INTERFACE PkgConfig::soundtouch)
+else()
 add_subdirectory(soundtouch EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(soundtouch)
+endif()
 add_subdirectory(googletest EXCLUDE_FROM_ALL)
+pkg_search_module(cpuinfo IMPORTED_TARGET libcpuinfo)
+if(cpuinfo_FOUND)
+  message(STATUS "Using the system cpuinfo")
+  add_library(cpuinfo INTERFACE)
+  target_link_libraries(cpuinfo INTERFACE PkgConfig::cpuinfo)
+else()
 add_subdirectory(cpuinfo EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(cpuinfo)
+endif()
+find_package(FastFloat)
+if(FastFloat_FOUND)
+  message(STATUS "Using the system fast_float")
+  add_library(fast_float INTERFACE)
+  target_link_libraries(fast_float INTERFACE FastFloat::fast_float)
+else()
 add_subdirectory(fast_float EXCLUDE_FROM_ALL)
+endif()
 add_subdirectory(reshadefx EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(reshadefx)
 add_subdirectory(rcheevos EXCLUDE_FROM_ALL)
@@ -39,9 +103,16 @@ if(WIN32 OR ANDROID)
 endif()
 
 if(ENABLE_CUBEB)
+  find_package(cubeb)
+  if(cubeb_FOUND)
+    message(STATUS "Using the system cubeb")
+    add_library(cubeb INTERFACE)
+    target_link_libraries(cubeb INTERFACE cubeb::cubeb)
+  else()
   add_subdirectory(cubeb EXCLUDE_FROM_ALL)
   disable_compiler_warnings_for_target(cubeb)
   disable_compiler_warnings_for_target(speex)
+  endif()
 endif()
 
 if(ENABLE_OPENGL)
@@ -55,9 +126,27 @@ if(ENABLE_DISCORD_PRESENCE)
 endif()
 
 if(CPU_ARCH_X64)
-  add_subdirectory(xbyak EXCLUDE_FROM_ALL)
-  add_subdirectory(zydis EXCLUDE_FROM_ALL)
-  disable_compiler_warnings_for_target(zydis)
+  find_package(xbyak)
+  if(xbyak_FOUND)
+    message(STATUS "Using the system xbyak")
+    add_library(xbyak INTERFACE)
+    target_compile_definitions(xbyak INTERFACE "XBYAK_NO_EXCEPTION=1")
+    target_link_libraries(xbyak INTERFACE xbyak::xbyak)
+  else()
+    add_subdirectory(xbyak EXCLUDE_FROM_ALL)
+  endif()
+
+  if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
+    find_package(zydis)
+    if(zydis_FOUND)
+      message(STATUS "Using the system zydis")
+      add_library(zydis INTERFACE)
+      target_link_libraries(zydis INTERFACE Zydis::Zydis)
+    else()
+      add_subdirectory(zydis EXCLUDE_FROM_ALL)
+      disable_compiler_warnings_for_target(zydis)
+    endif()
+  endif()
 endif()
 
 if(CPU_ARCH_ARM32 OR CPU_ARCH_ARM64)
diff --git a/src/core/texture_replacements.cpp b/src/core/texture_replacements.cpp
index 153698c..c774cf9 100644
--- a/src/core/texture_replacements.cpp
+++ b/src/core/texture_replacements.cpp
@@ -14,9 +14,11 @@
 
 #include "fmt/format.h"
 #include "xxhash.h"
+#ifndef SYSTEM_XXHASH
 #if defined(CPU_ARCH_X86) || defined(CPU_ARCH_X64)
 #include "xxh_x86dispatch.h"
 #endif
+#endif
 
 #include <cinttypes>
 
-- 
2.44.0

