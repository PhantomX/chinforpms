From 4eab6fbff4fc51133236c903dbe687526dbe35bd Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 1 Aug 2022 15:42:10 -0300
Subject: [PATCH] Use system libraries

---
 dep/CMakeLists.txt                | 128 +++++++++++++++++++++++++++++-
 src/core/CMakeLists.txt           |   6 +-
 src/core/texture_replacements.cpp |   2 +
 3 files changed, 132 insertions(+), 4 deletions(-)

diff --git a/dep/CMakeLists.txt b/dep/CMakeLists.txt
index 5bbfcb3..18ec2f6 100644
--- a/dep/CMakeLists.txt
+++ b/dep/CMakeLists.txt
@@ -1,24 +1,146 @@
+find_package(fmt 8)
+if(fmt_FOUND)
+  message(STATUS "Using the system fmt")
+  add_library(fmt-shared INTERFACE)
+  target_link_libraries(fmt-shared INTERFACE fmt::fmt)
+  add_library(fmt ALIAS fmt-shared)
+else()
 add_subdirectory(fmt)
+endif()
+find_package(Microsoft.GSL 4.0.0)
+if(Microsoft.GSL_FOUND)
+  message(STATUS "Using the system GSL")
+  add_library(gsl-shared INTERFACE)
+  target_link_libraries(gsl-shared INTERFACE Microsoft.GSL::GSL)
+  add_library(GSL ALIAS gsl-shared)
+else()
 add_subdirectory(gsl)
-add_subdirectory(stb)
+endif()
+find_package(ZLIB)
+if(ZLIB_FOUND)
+  message(STATUS "Using the system zlib")
+  add_library(zlib-shared INTERFACE)
+  target_link_libraries(zlib-shared INTERFACE ZLIB::ZLIB)
+  add_library(zlib ALIAS zlib-shared)
+else()
 add_subdirectory(zlib)
-add_subdirectory(zstd)
+endif()
+
+add_subdirectory(stb)
+
+pkg_search_module(minizip IMPORTED_TARGET minizip)
+if(minizip_FOUND)
+  message(STATUS "Using the system minizip")
+  add_library(minizip-shared INTERFACE)
+  target_link_libraries(minizip-shared INTERFACE PkgConfig::minizip)
+  add_library(minizip ALIAS minizip-shared)
+else()
 add_subdirectory(minizip)
+endif()
+
+pkg_search_module(zstd IMPORTED_TARGET libzstd)
+if(zstd_FOUND)
+  message(STATUS "Using the system zstd")
+  add_library(zstd-shared INTERFACE)
+  target_link_libraries(zstd-shared INTERFACE PkgConfig::zstd)
+  add_library(Zstd::Zstd ALIAS zstd-shared)
+else()
+add_subdirectory(zstd)
+endif()
+
+pkg_search_module(libchdr IMPORTED_TARGET libchdr)
+if(libchdr_FOUND)
+  message(STATUS "Using the system libchdr")
+ add_library(libchdr-shared INTERFACE)
+  target_link_libraries(libchdr-shared INTERFACE PkgConfig::libchdr)
+  add_library(libchdr ALIAS libchdr-shared)
+else()
 add_subdirectory(lzma)
 add_subdirectory(libchdr)
+endif()
+
+pkg_search_module(xxhash IMPORTED_TARGET libxxhash)
+if(xxhash_FOUND)
+  message(STATUS "Using the system libxxhash")
+  add_library(xxhash-shared INTERFACE)
+  target_compile_definitions(xxhash-shared INTERFACE SYSTEM_XXHASH=1)
+  target_link_libraries(xxhash-shared INTERFACE PkgConfig::xxhash)
+  add_library(xxhash ALIAS xxhash-shared)
+else()
 add_subdirectory(xxhash)
+endif()
+
+pkg_search_module(rapidjson IMPORTED_TARGET RapidJSON)
+if(rapidjson_FOUND)
+  message(STATUS "Using the system rapidjson")
+  add_library(rapidjson INTERFACE)
+  target_link_libraries(rapidjson INTERFACE PkgConfig::rapidjson)
+else()
 add_subdirectory(rapidjson)
+endif()
+
 add_subdirectory(glslang)
 add_subdirectory(imgui)
 add_subdirectory(simpleini)
+
+find_package(VulkanHeaders)
+if(VulkanHeaders_FOUND)
+  message(STATUS "Using the system vulkan-headers")
+  add_library(vulkan-shared INTERFACE)
+  target_link_libraries(vulkan-shared INTERFACE Vulkan::Headers)
+  add_library(vulkan-headers ALIAS vulkan-shared)
+else()
 add_subdirectory(vulkan)
+endif()
+
+pkg_search_module(soundtouch IMPORTED_TARGET soundtouch)
+if(soundtouch_FOUND)
+  message(STATUS "Using the system soundtouch")
+  add_library(soundtouch-shared INTERFACE)
+  target_link_libraries(soundtouch-shared INTERFACE PkgConfig::soundtouch)
+  add_library(soundtouch ALIAS soundtouch-shared)
+else()
 add_subdirectory(soundtouch)
+endif()
+
 add_subdirectory(googletest)
+
+pkg_search_module(cpuinfo IMPORTED_TARGET libcpuinfo)
+if(cpuinfo_FOUND)
+  message(STATUS "Using the system cpuinfo")
+  add_library(cpuinfo-shared INTERFACE)
+  target_link_libraries(cpuinfo-shared INTERFACE PkgConfig::cpuinfo)
+  add_library(cpuinfo ALIAS cpuinfo-shared)
+else()
 add_subdirectory(cpuinfo)
+endif()
+
+find_package(FastFloat)
+if(FastFloat_FOUND)
+  message(STATUS "Using the system fast_float")
+  add_library(fast_float INTERFACE)
+  target_link_libraries(fast_float INTERFACE FastFloat::fast_float)
+else()
 add_subdirectory(fast_float)
+endif()
+
+find_package(xbyak)
+if(xbyak_FOUND)
+  message(STATUS "Using the system xbyak")
+  add_library(xbyak INTERFACE)
+  target_link_libraries(xbyak INTERFACE xbyak::xbyak)
+endif()
 
 if(ENABLE_CUBEB)
-  add_subdirectory(cubeb)
+  find_package(cubeb)
+  if(cubeb_FOUND)
+    message(STATUS "Using the system cubeb")
+    add_library(cubeb-shared INTERFACE)
+    target_link_libraries(cubeb-shared INTERFACE cubeb::cubeb)
+    add_library(cubeb ALIAS cubeb-shared)
+  else()
+    add_subdirectory(cubeb)
+  endif()
 endif()
 
 if(ENABLE_OPENGL)
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index cec43dc..f741813 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -126,7 +126,11 @@ target_link_libraries(core PUBLIC Threads::Threads common util zlib)
 target_link_libraries(core PRIVATE stb xxhash imgui rapidjson)
 
 if(${CPU_ARCH} STREQUAL "x64")
-  target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../../dep/xbyak/xbyak")
+  if(TARGET xbyak)
+    target_link_libraries(core PUBLIC xbyak)
+  else()
+    target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../../dep/xbyak/xbyak")
+  endif()
   target_compile_definitions(core PUBLIC "XBYAK_NO_EXCEPTION=1" "WITH_RECOMPILER=1" "WITH_MMAP_FASTMEM=1")
   target_sources(core PRIVATE ${RECOMPILER_SRCS}
     cpu_recompiler_code_generator_x64.cpp
diff --git a/src/core/texture_replacements.cpp b/src/core/texture_replacements.cpp
index 0edbc6b..b7d1e70 100644
--- a/src/core/texture_replacements.cpp
+++ b/src/core/texture_replacements.cpp
@@ -12,9 +12,11 @@
 #include "host.h"
 #include "settings.h"
 #include "xxhash.h"
+#ifndef SYSTEM_XXHASH
 #if defined(CPU_X86) || defined(CPU_X64)
 #include "xxh_x86dispatch.h"
 #endif
+#endif
 #include <cinttypes>
 Log_SetChannel(TextureReplacements);
 
-- 
2.41.0

