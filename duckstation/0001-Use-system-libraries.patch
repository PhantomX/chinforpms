From 9fd8f56a4aa64a247bae912838c21c95708f38e0 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 1 Aug 2022 15:42:10 -0300
Subject: [PATCH] Use system libraries

---
 dep/CMakeLists.txt                | 111 ++++++++++++++++++++++++++++++
 src/core/CMakeLists.txt           |  13 +++-
 src/core/texture_replacements.cpp |   2 +
 3 files changed, 125 insertions(+), 1 deletion(-)

diff --git a/dep/CMakeLists.txt b/dep/CMakeLists.txt
index 6b4473f..dc89fb0 100644
--- a/dep/CMakeLists.txt
+++ b/dep/CMakeLists.txt
@@ -1,42 +1,153 @@
+find_package(fmt 9)
+if(fmt_FOUND)
+  message(STATUS "Using the system fmt")
+  add_library(fmt-shared INTERFACE)
+  target_link_libraries(fmt-shared INTERFACE fmt::fmt)
+  add_library(fmt ALIAS fmt-shared)
+else()
 add_subdirectory(fmt EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(fmt)
+endif()
 add_subdirectory(stb EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(stb)
+find_package(ZLIB)
+if(ZLIB_FOUND)
+  message(STATUS "Using the system zlib")
+  add_library(zlib-shared INTERFACE)
+  target_link_libraries(zlib-shared INTERFACE ZLIB::ZLIB)
+  add_library(zlib ALIAS zlib-shared)
+else()
 add_subdirectory(zlib EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(zlib)
+endif()
+pkg_search_module(zstd IMPORTED_TARGET libzstd)
+if(zstd_FOUND)
+  message(STATUS "Using the system zstd")
+  add_library(zstd-shared INTERFACE)
+  target_link_libraries(zstd-shared INTERFACE PkgConfig::zstd)
+  add_library(Zstd::Zstd ALIAS zstd-shared)
+else()
 add_subdirectory(zstd EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(zstd)
+endif()
+pkg_search_module(minizip IMPORTED_TARGET minizip)
+if(minizip_FOUND)
+  message(STATUS "Using the system minizip")
+  add_library(minizip-shared INTERFACE)
+  target_link_libraries(minizip-shared INTERFACE PkgConfig::minizip)
+  add_library(minizip ALIAS minizip-shared)
+else()
 add_subdirectory(minizip EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(minizip)
+endif()
+pkg_search_module(libchdr IMPORTED_TARGET libchdr)
+if(libchdr_FOUND)
+  message(STATUS "Using the system libchdr")
+ add_library(libchdr-shared INTERFACE)
+  target_link_libraries(libchdr-shared INTERFACE PkgConfig::libchdr)
+  add_library(libchdr ALIAS libchdr-shared)
+else()
 add_subdirectory(lzma EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(lzma)
 add_subdirectory(libchdr EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(libchdr)
+endif()
+pkg_search_module(xxhash IMPORTED_TARGET libxxhash)
+if(xxhash_FOUND)
+  message(STATUS "Using the system libxxhash")
+  add_library(xxhash-shared INTERFACE)
+  target_compile_definitions(xxhash-shared INTERFACE SYSTEM_XXHASH=1)
+  target_link_libraries(xxhash-shared INTERFACE PkgConfig::xxhash)
+  add_library(xxhash ALIAS xxhash-shared)
+else()
 add_subdirectory(xxhash EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(xxhash)
+endif()
+pkg_search_module(rapidjson IMPORTED_TARGET RapidJSON)
+if(rapidjson_FOUND)
+  message(STATUS "Using the system rapidjson")
+  add_library(rapidjson INTERFACE)
+  target_link_libraries(rapidjson INTERFACE PkgConfig::rapidjson)
+else()
 add_subdirectory(rapidjson EXCLUDE_FROM_ALL)
+endif()
 add_subdirectory(glslang EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(glslang)
 add_subdirectory(imgui EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(imgui)
 add_subdirectory(simpleini EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(simpleini)
+find_package(VulkanHeaders)
+if(VulkanHeaders_FOUND)
+  message(STATUS "Using the system vulkan-headers")
+  add_library(vulkan-shared INTERFACE)
+  target_link_libraries(vulkan-shared INTERFACE Vulkan::Headers)
+  add_library(vulkan-headers ALIAS vulkan-shared)
+else()
 add_subdirectory(vulkan EXCLUDE_FROM_ALL)
+endif()
+pkg_search_module(soundtouch IMPORTED_TARGET soundtouch)
+if(soundtouch_FOUND)
+  message(STATUS "Using the system soundtouch")
+  add_library(soundtouch-shared INTERFACE)
+  target_link_libraries(soundtouch-shared INTERFACE PkgConfig::soundtouch)
+  add_library(soundtouch ALIAS soundtouch-shared)
+else()
 add_subdirectory(soundtouch EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(soundtouch)
+endif()
 add_subdirectory(googletest EXCLUDE_FROM_ALL)
+pkg_search_module(cpuinfo IMPORTED_TARGET libcpuinfo)
+if(cpuinfo_FOUND)
+  message(STATUS "Using the system cpuinfo")
+  add_library(cpuinfo-shared INTERFACE)
+  target_link_libraries(cpuinfo-shared INTERFACE PkgConfig::cpuinfo)
+  add_library(cpuinfo ALIAS cpuinfo-shared)
+else()
 add_subdirectory(cpuinfo EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(cpuinfo)
+endif()
+find_package(FastFloat)
+if(FastFloat_FOUND)
+  message(STATUS "Using the system fast_float")
+  add_library(fast_float INTERFACE)
+  target_link_libraries(fast_float INTERFACE FastFloat::fast_float)
+else()
 add_subdirectory(fast_float EXCLUDE_FROM_ALL)
+endif()
 add_subdirectory(reshadefx EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(reshadefx)
 add_subdirectory(rcheevos EXCLUDE_FROM_ALL)
 disable_compiler_warnings_for_target(rcheevos)
 
+find_package(xbyak)
+if(xbyak_FOUND)
+  message(STATUS "Using the system xbyak")
+  add_library(xbyak INTERFACE)
+  target_link_libraries(xbyak INTERFACE xbyak::xbyak)
+endif()
+
+if(ENABLE_HOST_DISASSEMBLY)
+  find_package(zydis)
+  if(zydis_FOUND)
+    message(STATUS "Using the system zydis")
+    add_library(zydis INTERFACE)
+    target_link_libraries(zydis INTERFACE Zydis::Zydis)
+  endif()
+endif()
+
 if(ENABLE_CUBEB)
+  find_package(cubeb)
+  if(cubeb_FOUND)
+    message(STATUS "Using the system cubeb")
+    add_library(cubeb-shared INTERFACE)
+    target_link_libraries(cubeb-shared INTERFACE cubeb::cubeb)
+    add_library(cubeb ALIAS cubeb-shared)
+  else()
   add_subdirectory(cubeb EXCLUDE_FROM_ALL)
   disable_compiler_warnings_for_target(cubeb)
   disable_compiler_warnings_for_target(speex)
+  endif()
 endif()
 
 if(ENABLE_OPENGL)
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index ee3cdf6..a105dfc 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -133,8 +133,19 @@ target_link_libraries(core PUBLIC Threads::Threads common util zlib)
 target_link_libraries(core PRIVATE stb xxhash imgui rapidjson rcheevos)
 
 if(${CPU_ARCH} STREQUAL "x64")
-  target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../../dep/xbyak/xbyak")
+  if(TARGET xbyak)
+    target_link_libraries(core PUBLIC xbyak)
+  else()
+    target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../../dep/xbyak/xbyak")
+  endif()
   target_compile_definitions(core PUBLIC "XBYAK_NO_EXCEPTION=1" "ENABLE_RECOMPILER=1" "ENABLE_MMAP_FASTMEM=1")
+  if(ENABLE_HOST_DISASSEMBLY)
+    if(TARGET zydis)
+      target_link_libraries(core PUBLIC zydis)
+    else()
+      target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../../dep/zydis/include")
+    endif()
+  endif()
   target_sources(core PRIVATE ${RECOMPILER_SRCS}
     cpu_recompiler_code_generator_x64.cpp
   )
diff --git a/src/core/texture_replacements.cpp b/src/core/texture_replacements.cpp
index c41469b..9fa0254 100644
--- a/src/core/texture_replacements.cpp
+++ b/src/core/texture_replacements.cpp
@@ -14,9 +14,11 @@
 
 #include "fmt/format.h"
 #include "xxhash.h"
+#ifndef SYSTEM_XXHASH
 #if defined(CPU_ARCH_X86) || defined(CPU_ARCH_X64)
 #include "xxh_x86dispatch.h"
 #endif
+#endif
 
 #include <cinttypes>
 
-- 
2.41.0

