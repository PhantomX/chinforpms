From 40991e8eeab6a391d3857e0c21c626dbbb99ff26 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 16 Sep 2024 17:19:03 -0300
Subject: [PATCH] Rename to _ds

---
 CMakeLists.txt            | 14 +++++++-------
 ShadercConfig.cmake.in    |  8 ++++----
 libshaderc/CMakeLists.txt | 14 ++------------
 3 files changed, 13 insertions(+), 23 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f89975e..0926961 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -153,26 +153,26 @@ endfunction()
 
 if(SHADERC_ENABLE_INSTALL)
   include(CMakePackageConfigHelpers)
-  set(SHADERC_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/Shaderc")
+  set(SHADERC_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/Shaderc_ds")
   install(
     EXPORT ShadercTargets
-    FILE ShadercTargets.cmake
-    NAMESPACE Shaderc::
+    FILE Shaderc_dsTargets.cmake
+    NAMESPACE Shaderc_ds::
     DESTINATION "${SHADERC_INSTALL_CMAKEDIR}"
   )
   configure_package_config_file(ShadercConfig.cmake.in
-    "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfig.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/Shaderc_dsConfig.cmake"
     INSTALL_DESTINATION "${SHADERC_INSTALL_CMAKEDIR}"
   )
   write_basic_package_version_file(
-    "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfigVersion.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/Shaderc_dsConfigVersion.cmake"
     VERSION "${CMAKE_PROJECT_VERSION}"
     COMPATIBILITY SameMajorVersion
   )
   install(
     FILES
-      "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfig.cmake"
-      "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfigVersion.cmake"
+      "${CMAKE_CURRENT_BINARY_DIR}/Shaderc_dsConfig.cmake"
+      "${CMAKE_CURRENT_BINARY_DIR}/Shaderc_dsConfigVersion.cmake"
       DESTINATION "${SHADERC_INSTALL_CMAKEDIR}"
   )
 endif()
diff --git a/ShadercConfig.cmake.in b/ShadercConfig.cmake.in
index bfdf945..0944084 100644
--- a/ShadercConfig.cmake.in
+++ b/ShadercConfig.cmake.in
@@ -1,10 +1,10 @@
 @PACKAGE_INIT@
 
-include("${CMAKE_CURRENT_LIST_DIR}/ShadercTargets.cmake")
+include("${CMAKE_CURRENT_LIST_DIR}/Shaderc_dsTargets.cmake")
 
-check_required_components(Shaderc)
+check_required_components(Shaderc_ds)
 
-get_target_property(TEMP_SHADERC_LOCATION Shaderc::shaderc_shared LOCATION)
-message(STATUS "Found Shaderc: ${TEMP_SHADERC_LOCATION}")
+get_target_property(TEMP_SHADERC_LOCATION Shaderc_ds::shaderc_shared LOCATION)
+message(STATUS "Found Shaderc_ds: ${TEMP_SHADERC_LOCATION}")
 unset(TEMP_SHADERC_LOCATION)
 
diff --git a/libshaderc/CMakeLists.txt b/libshaderc/CMakeLists.txt
index dc881f4..f2bbeca 100644
--- a/libshaderc/CMakeLists.txt
+++ b/libshaderc/CMakeLists.txt
@@ -39,6 +39,7 @@ target_compile_definitions(shaderc_shared
 # the shaderc distributed with the Vulkan SDK.
 if(NOT WIN32)
   set_target_properties(shaderc_shared PROPERTIES OUTPUT_NAME "shaderc_ds")
+  set_target_properties(shaderc_shared PROPERTIES SOVERSION 1)
 endif()
 
 if(SHADERC_ENABLE_INSTALL)
@@ -50,7 +51,7 @@ if(SHADERC_ENABLE_INSTALL)
       include/shaderc/shaderc.h
       include/shaderc/shaderc.hpp
     DESTINATION
-      ${CMAKE_INSTALL_INCLUDEDIR}/shaderc)
+      ${CMAKE_INSTALL_INCLUDEDIR}/shaderc_ds)
 
   install(TARGETS shaderc_shared
     EXPORT ShadercTargets
@@ -71,17 +72,6 @@ set(SHADERC_LIBS
 
 target_link_libraries(shaderc_shared PRIVATE ${SHADERC_LIBS})
 
-shaderc_add_tests(
-  TEST_PREFIX shaderc_shared
-  LINK_LIBS shaderc_shared SPIRV-Tools
-  INCLUDE_DIRS include ${shaderc_SOURCE_DIR}/libshaderc_util/include ${glslang_SOURCE_DIR}
-               ${spirv-tools_SOURCE_DIR}/include
-               ${SPIRV-Headers_SOURCE_DIR}/include
-  TEST_NAMES
-    shaderc
-    shaderc_cpp
-    shaderc_private)
-
 if(${SHADERC_ENABLE_TESTS})
   add_executable(shaderc_c_smoke_test ./src/shaderc_c_smoke_test.c)
   shaderc_default_c_compile_options(shaderc_c_smoke_test)
-- 
2.46.0

