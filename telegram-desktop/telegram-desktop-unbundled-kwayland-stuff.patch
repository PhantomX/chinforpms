--- a/cmake/external/kwayland/CMakeLists.txt
+++ b/cmake/external/kwayland/CMakeLists.txt
@@ -20,50 +20,6 @@ add_library(external_kwayland_bundled STATIC IMPORTED)
 
 include(ExternalProject)
 
-ExternalProject_Add(extra-cmake-modules
-    URL ${third_party_loc}/extra-cmake-modules
-    CMAKE_GENERATOR Ninja
-    CMAKE_ARGS
-        -DCMAKE_BUILD_TYPE=Release
-        -DCMAKE_INSTALL_PREFIX=<BINARY_DIR>
-        -DCMAKE_INSTALL_DATADIR=share
-        -DBUILD_TESTING=OFF
-    BUILD_COMMAND ${CMAKE_COMMAND} --build <BINARY_DIR>
-    COMMAND ${CMAKE_COMMAND} --install <BINARY_DIR>
-    STEP_TARGETS build
-    EXCLUDE_FROM_ALL TRUE
-    BUILD_BYPRODUCTS <BINARY_DIR>/share/ECM/cmake/ECMConfig.cmake
-)
-
-ExternalProject_Get_property(extra-cmake-modules BINARY_DIR)
-set(extra_cmake_modules_binary_dir ${BINARY_DIR})
-
-set(wayland_protocols_source_dir ${third_party_loc}/wayland-protocols)
-file(READ "${wayland_protocols_source_dir}/meson.build" wayland_protocols_meson_build)
-string(REGEX MATCH "\n[ \t]*version: '([0-9.]+)'" _ ${wayland_protocols_meson_build})
-set(wayland_protocols_version ${CMAKE_MATCH_1})
-configure_file("wayland-protocols.pc.in" "${CMAKE_CURRENT_BINARY_DIR}/share/pkgconfig/wayland-protocols.pc" @ONLY)
-
-ExternalProject_Add(plasma-wayland-protocols
-    URL ${third_party_loc}/plasma-wayland-protocols
-    CMAKE_GENERATOR Ninja
-    CMAKE_ARGS
-        -DCMAKE_BUILD_TYPE=Release
-        -DCMAKE_INSTALL_PREFIX=<BINARY_DIR>
-        -DCMAKE_INSTALL_LIBDIR=lib
-        -DECM_DIR=${extra_cmake_modules_binary_dir}/share/ECM/cmake
-    BUILD_COMMAND ${CMAKE_COMMAND} --build <BINARY_DIR>
-    COMMAND ${CMAKE_COMMAND} --install <BINARY_DIR>
-    STEP_TARGETS build
-    EXCLUDE_FROM_ALL TRUE
-    BUILD_BYPRODUCTS <BINARY_DIR>/lib/cmake/PlasmaWaylandProtocols/PlasmaWaylandProtocolsConfig.cmake
-)
-
-ExternalProject_Add_StepDependencies(plasma-wayland-protocols configure extra-cmake-modules-build)
-
-ExternalProject_Get_property(plasma-wayland-protocols BINARY_DIR)
-set(plasma_wayland_protocols_binary_dir ${BINARY_DIR})
-
 ExternalProject_Add(kwayland
     URL ${third_party_loc}/kwayland
     CMAKE_GENERATOR Ninja
@@ -73,17 +29,11 @@ ExternalProject_Add(kwayland
         -DBUILD_TESTING=OFF
         -DBUILD_WITH_QT6=${DESKTOP_APP_QT6}
         -DEXCLUDE_DEPRECATED_BEFORE_AND_AT=5.91.0
-        -DCMAKE_PREFIX_PATH=${CMAKE_CURRENT_BINARY_DIR}
-        -DECM_DIR=${extra_cmake_modules_binary_dir}/share/ECM/cmake
-        -DPlasmaWaylandProtocols_DIR=${plasma_wayland_protocols_binary_dir}/lib/cmake/PlasmaWaylandProtocols
     STEP_TARGETS build
     EXCLUDE_FROM_ALL TRUE
     BUILD_BYPRODUCTS <BINARY_DIR>/lib/libKF5WaylandClient.a
 )
 
-ExternalProject_Add_StepDependencies(kwayland configure extra-cmake-modules-build)
-ExternalProject_Add_StepDependencies(kwayland configure plasma-wayland-protocols-build)
-
 ExternalProject_Get_property(kwayland SOURCE_DIR)
 ExternalProject_Get_property(kwayland BINARY_DIR)
 
