From c9836330c5811baff29f8b1a9ace3fda1c949442 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sat, 30 Oct 2021 23:57:28 -0300
Subject: [PATCH] Do not pop up emoji tabbed panel and media menu on mouse over

Updated from https://github.com/telegramdesktop/tdesktop/pull/8009 by
Nicholas Guriev <guriev-ns@ya.ru>
---
 Telegram/SourceFiles/chat_helpers/tabbed_panel.cpp       | 8 +-------
 Telegram/SourceFiles/chat_helpers/tabbed_panel.h         | 1 -
 Telegram/SourceFiles/history/history_widget.cpp          | 9 +++++++--
 .../view/controls/history_view_compose_controls.cpp      | 9 +++++++--
 .../SourceFiles/media/view/media_view_overlay_widget.cpp | 6 ------
 .../SourceFiles/media/view/media_view_overlay_widget.h   | 1 -
 6 files changed, 15 insertions(+), 19 deletions(-)

diff --git a/Telegram/SourceFiles/chat_helpers/tabbed_panel.cpp b/Telegram/SourceFiles/chat_helpers/tabbed_panel.cpp
index fd98956..a7cb886 100644
--- a/Telegram/SourceFiles/chat_helpers/tabbed_panel.cpp
+++ b/Telegram/SourceFiles/chat_helpers/tabbed_panel.cpp
@@ -229,10 +229,6 @@ void TabbedPanel::leaveEventHook(QEvent *e) {
 	return TWidget::leaveEventHook(e);
 }
 
-void TabbedPanel::otherEnter() {
-	showAnimated();
-}
-
 void TabbedPanel::otherLeave() {
 	if (preventAutoHide()) {
 		return;
@@ -408,9 +404,7 @@ void TabbedPanel::showStarted() {
 }
 
 bool TabbedPanel::eventFilter(QObject *obj, QEvent *e) {
-	if (e->type() == QEvent::Enter) {
-		otherEnter();
-	} else if (e->type() == QEvent::Leave) {
+	if (e->type() == QEvent::Leave) {
 		otherLeave();
 	}
 	return false;
diff --git a/Telegram/SourceFiles/chat_helpers/tabbed_panel.h b/Telegram/SourceFiles/chat_helpers/tabbed_panel.h
index 48dba77..6f1bf5a 100644
--- a/Telegram/SourceFiles/chat_helpers/tabbed_panel.h
+++ b/Telegram/SourceFiles/chat_helpers/tabbed_panel.h
@@ -60,7 +60,6 @@ public:
 protected:
 	void enterEventHook(QEnterEvent *e) override;
 	void leaveEventHook(QEvent *e) override;
-	void otherEnter();
 	void otherLeave();
 
 	void paintEvent(QPaintEvent *e) override;
diff --git a/Telegram/SourceFiles/history/history_widget.cpp b/Telegram/SourceFiles/history/history_widget.cpp
index 59654c2..6dd9650 100644
--- a/Telegram/SourceFiles/history/history_widget.cpp
+++ b/Telegram/SourceFiles/history/history_widget.cpp
@@ -924,8 +924,13 @@ void HistoryWidget::initVoiceRecordBar() {
 void HistoryWidget::initTabbedSelector() {
 	refreshTabbedPanel();
 
-	_tabbedSelectorToggle->addClickHandler([=] {
-		toggleTabbedSelectorMode();
+	_tabbedSelectorToggle->setAcceptBoth();
+	_tabbedSelectorToggle->addClickHandler([=](Qt::MouseButton mod) {
+		if (mod == Qt::LeftButton) {
+			_tabbedPanel->toggleAnimated();
+		} else if (mod == Qt::RightButton) {
+			toggleTabbedSelectorMode();
+		}
 	});
 
 	const auto selector = controller()->tabbedSelector();
diff --git a/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp b/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp
index 3ac7694..07f2e0c 100644
--- a/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp
+++ b/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp
@@ -1539,8 +1539,13 @@ void ComposeControls::initTabbedSelector() {
 		setTabbedPanel(nullptr);
 	}
 
-	_tabbedSelectorToggle->addClickHandler([=] {
-		toggleTabbedSelectorMode();
+	_tabbedSelectorToggle->setAcceptBoth();
+	_tabbedSelectorToggle->addClickHandler([=](Qt::MouseButton mod) {
+		if (mod == Qt::LeftButton) {
+			_tabbedPanel->toggleAnimated();
+		} else if (mod == Qt::RightButton) {
+			toggleTabbedSelectorMode();
+		}
 	});
 
 	const auto selector = _window->tabbedSelector();
diff --git a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
index 31e1290..4b516e2 100644
--- a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
+++ b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
@@ -466,7 +466,6 @@ OverlayWidget::OverlayWidget()
 	_docCancel->addClickHandler([=] { saveCancel(); });
 
 	_dropdown->setHiddenCallback([this] { dropdownHidden(); });
-	_dropdownShowTimer.setCallback([=] { showDropdown(); });
 }
 
 void OverlayWidget::refreshLang() {
@@ -4228,11 +4227,6 @@ void OverlayWidget::updateOverRect(OverState state) {
 bool OverlayWidget::updateOverState(OverState newState) {
 	bool result = true;
 	if (_over != newState) {
-		if (newState == OverMore && !_ignoringDropdown) {
-			_dropdownShowTimer.callOnce(0);
-		} else {
-			_dropdownShowTimer.cancel();
-		}
 		updateOverRect(_over);
 		updateOverRect(newState);
 		if (_over != OverNone) {
diff --git a/Telegram/SourceFiles/media/view/media_view_overlay_widget.h b/Telegram/SourceFiles/media/view/media_view_overlay_widget.h
index e61460b..b8ccf76 100644
--- a/Telegram/SourceFiles/media/view/media_view_overlay_widget.h
+++ b/Telegram/SourceFiles/media/view/media_view_overlay_widget.h
@@ -543,7 +543,6 @@ private:
 
 	base::unique_qptr<Ui::PopupMenu> _menu;
 	object_ptr<Ui::DropdownMenu> _dropdown;
-	base::Timer _dropdownShowTimer;
 
 	bool _receiveMouse = true;
 
-- 
2.33.1

