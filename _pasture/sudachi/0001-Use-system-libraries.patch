From b6aa65bdf2e3ad4e79a409d03cf069faff32ca56 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 4 Apr 2022 20:25:52 -0300
Subject: [PATCH] Use system libraries

FindMBETLS.cmake from Dolphin-emu project:
https://github.com/dolphin-emu/dolphin
https://github.com/dolphin-emu/dolphin/raw/master/CMake/FindMBEDTLS.cmake
---
 CMakeLists.txt                           |  6 ++----
 externals/CMakeLists.txt                 |  9 +++++++++
 externals/find-modules/FindMBEDTLS.cmake | 23 +++++++++++++++++++++++
 3 files changed, 34 insertions(+), 4 deletions(-)
 create mode 100644 externals/find-modules/FindMBEDTLS.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b6c5e65..84654ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,14 +8,12 @@ project(sudachi)
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules")
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/externals/cmake-modules")
 
-include(DownloadExternals)
 include(CMakeDependentOption)
 include(CTest)
 
 # Set bundled sdl3/qt as dependent options.
 # OFF by default, but if ENABLE_SDL3 and MSVC are true then ON
 option(ENABLE_SDL3 "Enable the SDL3 frontend" ON)
-set(USE_SDL3_FROM_EXTERNALS "Uses SDL3 from the externals directory" ON)
 CMAKE_DEPENDENT_OPTION(SUDACHI_USE_BUNDLED_SDL3 "Download bundled SDL3 binaries" ON "ENABLE_SDL3;MSVC" OFF)
 # On Linux system SDL3 is likely to be lacking HIDAPI support which have drawbacks but is needed for SDL motion
 CMAKE_DEPENDENT_OPTION(SUDACHI_USE_EXTERNAL_SDL3 "Compile external SDL3" ON "ENABLE_SDL3;NOT MSVC" OFF)
@@ -299,8 +297,6 @@ set(FFmpeg_COMPONENTS
     avutil
     swscale)
 
-add_subdirectory(externals)
-
 # Enforce the search mode of non-required packages for better and shorter failure messages
 find_package(Boost 1.79.0 REQUIRED context)
 find_package(enet 1.3 MODULE)
@@ -396,6 +392,8 @@ function(set_sudachi_qt_components)
     set(SUDACHI_QT_COMPONENTS ${SUDACHI_QT_COMPONENTS2} PARENT_SCOPE)
 endfunction(set_sudachi_qt_components)
 
+add_subdirectory(externals)
+
 # Qt5 requires that we find components, so it doesn't fit our pretty little find package function
 if(ENABLE_QT)
     set(QT_VERSION 5.15)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index e78b0f8..56eada1 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -40,6 +40,14 @@ endif()
 add_subdirectory(glad)
 
 # mbedtls
+find_package(MBEDTLS)
+if(MBEDTLS_FOUND)
+  message(STATUS "Using the system mbed TLS")
+  add_library(mbedtls-shared INTERFACE)
+  target_link_libraries(mbedtls-shared INTERFACE "${MBEDTLS_LIBRARIES}")
+  target_include_directories(mbedtls-shared INTERFACE "${MBEDTLS_INCLUDE_DIRS}")
+  add_library(mbedtls ALIAS mbedtls-shared)
+else()
 add_subdirectory(mbedtls)
 target_include_directories(mbedtls PUBLIC ./mbedtls/include)
 if (NOT MSVC)
@@ -47,6 +55,7 @@ if (NOT MSVC)
         -Wno-unused-but-set-variable
         -Wno-string-concatenation)
 endif()
+endif()
 
 # MicroProfile
 add_library(microprofile INTERFACE)
diff --git a/externals/find-modules/FindMBEDTLS.cmake b/externals/find-modules/FindMBEDTLS.cmake
new file mode 100644
index 0000000..97c4515
--- /dev/null
+++ b/externals/find-modules/FindMBEDTLS.cmake
@@ -0,0 +1,23 @@
+find_path(MBEDTLS_INCLUDE_DIR mbedtls/ssl.h)
+
+find_library(MBEDTLS_LIBRARY mbedtls)
+find_library(MBEDX509_LIBRARY mbedx509)
+find_library(MBEDCRYPTO_LIBRARY mbedcrypto)
+
+set(MBEDTLS_INCLUDE_DIRS ${MBEDTLS_INCLUDE_DIR})
+set(MBEDTLS_LIBRARIES ${MBEDTLS_LIBRARY} ${MBEDX509_LIBRARY} ${MBEDCRYPTO_LIBRARY})
+
+set(CMAKE_REQUIRED_INCLUDES ${MBEDTLS_INCLUDE_DIRS})
+check_cxx_source_compiles("
+	#include <mbedtls/version.h>
+	#if MBEDTLS_VERSION_NUMBER < 0x02040000
+	#error \"Your mbed TLS version is too old.\"
+	#endif
+	int main() {}"
+	MBEDTLS_VERSION_OK)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(MBEDTLS DEFAULT_MSG
+	MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY MBEDTLS_VERSION_OK)
+
+mark_as_advanced(MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY)
-- 
2.46.2

