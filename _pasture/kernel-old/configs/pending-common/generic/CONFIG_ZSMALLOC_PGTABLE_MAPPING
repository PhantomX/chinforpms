# CONFIG_ZSMALLOC_PGTABLE_MAPPING:
# 
# By default, zsmalloc uses a copy-based object mapping method to
# access allocations that span two pages. However, if a particular
# architecture (ex, ARM) performs VM mapping faster than copying,
# then you should select this. This causes zsmalloc to use page table
# mapping rather than copying for object mapping.
# 
# You can check speed with zsmalloc benchmark:
# https://github.com/spartacus06/zsmapbench
# 
# Symbol: ZSMALLOC_PGTABLE_MAPPING [=n]
# Type  : bool
# Defined at mm/Kconfig:708
#   Prompt: Use page table mapping to access object in zsmalloc
#   Depends on: ZSMALLOC [=y]=y
#   Location:
#     -> Memory Management options
#       -> Memory allocator for compressed pages (ZSMALLOC [=y])
# 
# 
# 
# CONFIG_ZSMALLOC_PGTABLE_MAPPING is not set
