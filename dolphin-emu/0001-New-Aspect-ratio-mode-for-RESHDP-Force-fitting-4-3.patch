From 670011aece4a264ea796d08824ccbdcffd0eb449 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 14 Dec 2020 19:05:24 -0300
Subject: [PATCH] New Aspect ratio mode for RESHDP - Force fitting 4:3

From https://github.com/MoArtis/dolphin, MoArtis <mathieuphilippe.dev@gmail.com>
---
 Source/Core/DolphinQt/Config/Graphics/GeneralWidget.cpp | 2 +-
 Source/Core/DolphinQt/HotkeyScheduler.cpp               | 3 +++
 Source/Core/VideoCommon/Present.cpp                     | 5 +++++
 Source/Core/VideoCommon/VideoConfig.h                   | 1 +
 4 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/Source/Core/DolphinQt/Config/Graphics/GeneralWidget.cpp b/Source/Core/DolphinQt/Config/Graphics/GeneralWidget.cpp
index 27a2c16..f5881c7 100644
--- a/Source/Core/DolphinQt/Config/Graphics/GeneralWidget.cpp
+++ b/Source/Core/DolphinQt/Config/Graphics/GeneralWidget.cpp
@@ -57,7 +57,7 @@ void GeneralWidget::CreateWidgets()
 
   m_backend_combo = new ToolTipComboBox();
   m_aspect_combo =
-      new GraphicsChoice({tr("Auto"), tr("Force 16:9"), tr("Force 4:3"), tr("Stretch to Window")},
+      new GraphicsChoice({tr("Auto"), tr("Force 16:9"), tr("Force 4:3"), tr("Stretch to Window"), tr("Fit 4:3 (RESHDP)")},
                          Config::GFX_ASPECT_RATIO);
   m_adapter_combo = new ToolTipComboBox;
   m_enable_vsync = new GraphicsBool(tr("V-Sync"), Config::GFX_VSYNC);
diff --git a/Source/Core/DolphinQt/HotkeyScheduler.cpp b/Source/Core/DolphinQt/HotkeyScheduler.cpp
index 1e390c3..bbc2acc 100644
--- a/Source/Core/DolphinQt/HotkeyScheduler.cpp
+++ b/Source/Core/DolphinQt/HotkeyScheduler.cpp
@@ -406,6 +406,9 @@ void HotkeyScheduler::Run()
         case AspectMode::AnalogWide:
           OSD::AddMessage("Force 16:9");
           break;
+        case AspectMode::AnalogFit:
+          OSD::AddMessage("Fit 4:3 (RESHDP)");
+          break;
         case AspectMode::Auto:
         default:
           OSD::AddMessage("Auto");
diff --git a/Source/Core/VideoCommon/Present.cpp b/Source/Core/VideoCommon/Present.cpp
index 181dfea..9037697 100644
--- a/Source/Core/VideoCommon/Present.cpp
+++ b/Source/Core/VideoCommon/Present.cpp
@@ -245,6 +245,11 @@ float Presenter::CalculateDrawAspectRatio() const
 {
   const auto aspect_mode = g_ActiveConfig.aspect_mode;
 
+  if (g_ActiveConfig.aspect_mode == AspectMode::AnalogFit)
+  {
+    return 4.0f / 3.0f;
+  }
+
   // If stretch is enabled, we prefer the aspect ratio of the window.
   if (aspect_mode == AspectMode::Stretch)
     return (static_cast<float>(m_backbuffer_width) / static_cast<float>(m_backbuffer_height));
diff --git a/Source/Core/VideoCommon/VideoConfig.h b/Source/Core/VideoCommon/VideoConfig.h
index 1e5e2f6..9904ea5 100644
--- a/Source/Core/VideoCommon/VideoConfig.h
+++ b/Source/Core/VideoCommon/VideoConfig.h
@@ -25,6 +25,7 @@ enum class AspectMode : int
   AnalogWide,
   Analog,
   Stretch,
+  AnalogFit,
 };
 
 enum class StereoMode : int
-- 
2.39.1

