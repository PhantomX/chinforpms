diff -up CMakeLists.txt.nodiscord CMakeLists.txt
--- CMakeLists.txt.nodiscord	2018-09-21 20:41:31.526438527 -0300
+++ CMakeLists.txt	2018-09-21 20:44:09.227354241 -0300
@@ -823,7 +823,6 @@ endif()
 
 list(APPEND NativeAppSource
 	android/jni/TestRunner.cpp
-	UI/DiscordIntegration.cpp
 	UI/NativeApp.cpp
 	UI/BackgroundAudio.cpp
 	UI/DevScreens.cpp
@@ -1760,11 +1759,6 @@ if(FFmpeg_FOUND)
   )
 endif()
 
-# Discord integration
-if(NOT IOS)
-target_link_libraries(${CoreLibName} discord-rpc)
-endif()
-
 setup_target_project(${CoreLibName} Core)
 
 # Generate git-version.cpp at build time.
diff -up Core/Config.cpp.nodiscord Core/Config.cpp
--- Core/Config.cpp.nodiscord	2018-09-21 20:41:22.115412789 -0300
+++ Core/Config.cpp	2018-09-21 20:41:46.037394391 -0300
@@ -397,7 +397,6 @@ static ConfigSetting generalSettings[] =
 	ConfigSetting("CheckForNewVersion", &g_Config.bCheckForNewVersion, false),
 	ConfigSetting("Language", &g_Config.sLanguageIni, &DefaultLangRegion),
 	ConfigSetting("ForceLagSync", &g_Config.bForceLagSync, false, true, true),
-	ConfigSetting("DiscordPresence", &g_Config.bDiscordPresence, true, true, false),  // Or maybe it makes sense to have it per-game? Race conditions abound...
 
 	ReportedConfigSetting("NumWorkerThreads", &g_Config.iNumWorkerThreads, &DefaultNumWorkers, true, true),
 	ConfigSetting("AutoLoadSaveState", &g_Config.iAutoLoadSaveState, 0, true, true),
diff -up Core/Config.h.nodiscord Core/Config.h
--- Core/Config.h.nodiscord	2018-09-07 02:13:23.000000000 -0300
+++ Core/Config.h	2018-09-21 20:41:46.037394391 -0300
@@ -117,8 +117,6 @@ public:
 	std::vector<std::string> vPinnedPaths;
 	std::string sLanguageIni;
 
-	bool bDiscordPresence;  // Enables setting the Discord presence to the current game (or menu)
-
 	// GFX
 	int iGPUBackend;
 	std::string sFailedGPUBackends;
diff -up ext/CMakeLists.txt.nodiscord ext/CMakeLists.txt
--- ext/CMakeLists.txt.nodiscord	2018-09-07 02:13:23.000000000 -0300
+++ ext/CMakeLists.txt	2018-09-21 20:41:46.038394182 -0300
@@ -12,6 +12,3 @@ add_subdirectory(glslang)
 add_subdirectory(snappy)
 add_subdirectory(udis86)
 add_subdirectory(SPIRV-Cross-build)
-if(NOT IOS)
-add_subdirectory(discord-rpc-build)
-endif()
diff -up UI/DiscordIntegration.cpp.nodiscord UI/DiscordIntegration.cpp
--- UI/DiscordIntegration.cpp.nodiscord	2018-09-07 02:13:23.000000000 -0300
+++ UI/DiscordIntegration.cpp	2018-09-21 20:41:46.038394182 -0300
@@ -7,15 +7,7 @@
 #include "DiscordIntegration.h"
 #include "i18n/i18n.h"
 
-#if (PPSSPP_PLATFORM(WINDOWS) || PPSSPP_PLATFORM(MAC) || PPSSPP_PLATFORM(LINUX)) && !PPSSPP_PLATFORM(ANDROID)
-
-#define ENABLE_DISCORD
-
-#else
-
-// TODO
-
-#endif
+#define DISABLE_DISCORD
 
 #ifdef ENABLE_DISCORD
 #include "ext/discord-rpc/include/discord_rpc.h"
diff -up UI/EmuScreen.cpp.nodiscord UI/EmuScreen.cpp
--- UI/EmuScreen.cpp.nodiscord	2018-09-07 02:13:23.000000000 -0300
+++ UI/EmuScreen.cpp	2018-09-21 20:43:33.498849809 -0300
@@ -77,7 +77,6 @@
 #include "UI/GameSettingsScreen.h"
 #include "UI/InstallZipScreen.h"
 #include "UI/ProfilerDraw.h"
-#include "UI/DiscordIntegration.h"
 
 #if defined(_WIN32) && !PPSSPP_PLATFORM(UWP)
 #include "Windows/MainWindow.h"
@@ -201,9 +200,6 @@ void EmuScreen::bootGame(const std::stri
 		// Reset views in case controls are in a different place.
 		RecreateViews();
 
-		g_Discord.SetPresenceGame(info->GetTitle().c_str());
-	} else {
-		g_Discord.SetPresenceGame(sc->T("Untitled PSP game"));
 	}
 
 	CoreParameter coreParam{};
@@ -343,7 +339,6 @@ EmuScreen::~EmuScreen() {
 		startDumping = false;
 	}
 #endif
-	g_Discord.SetPresenceMenu();
 }
 
 void EmuScreen::dialogFinished(const Screen *dialog, DialogResult result) {
diff -up UI/GameSettingsScreen.cpp.nodiscord UI/GameSettingsScreen.cpp
--- UI/GameSettingsScreen.cpp.nodiscord	2018-09-07 02:13:23.000000000 -0300
+++ UI/GameSettingsScreen.cpp	2018-09-21 20:42:54.211092081 -0300
@@ -644,7 +644,6 @@ void GameSettingsScreen::CreateViews() {
 	networkingSettings->Add(new Choice(n->T("Adhoc Multiplayer forum")))->OnClick.Handle(this, &GameSettingsScreen::OnAdhocGuides);
 
 	networkingSettings->Add(new CheckBox(&g_Config.bEnableWlan, n->T("Enable networking", "Enable networking/wlan (beta)")));
-	networkingSettings->Add(new CheckBox(&g_Config.bDiscordPresence, n->T("Send Discord Presence information")));
 
 #if !defined(MOBILE_DEVICE) && !defined(USING_QT_UI)
 	networkingSettings->Add(new PopupTextInputChoice(&g_Config.proAdhocServer, n->T("Change proAdhocServer Address"), "", 255, screenManager()));
diff -up UI/NativeApp.cpp.nodiscord UI/NativeApp.cpp
--- UI/NativeApp.cpp.nodiscord	2018-09-07 02:13:23.000000000 -0300
+++ UI/NativeApp.cpp	2018-09-21 20:43:51.599052523 -0300
@@ -95,7 +95,6 @@
 #include "UI/TiltEventProcessor.h"
 #include "UI/BackgroundAudio.h"
 #include "UI/TextureUtil.h"
-#include "UI/DiscordIntegration.h"
 
 #if !defined(MOBILE_DEVICE)
 #include "Common/KeyMap.h"
@@ -411,8 +410,6 @@ void NativeInit(int argc, const char *ar
 	InitFastMath(cpu_info.bNEON);
 	SetupAudioFormats();
 
-	g_Discord.SetPresenceMenu();
-
 	// Make sure UI state is MENU.
 	ResetUIState();
 
@@ -1097,7 +1094,6 @@ void NativeUpdate() {
 	g_DownloadManager.Update();
 	screenManager->update();
 
-	g_Discord.Update();
 }
 
 bool NativeIsAtTopLevel() {
@@ -1283,8 +1279,6 @@ void NativeShutdown() {
 
 	net::Shutdown();
 
-	g_Discord.Shutdown();
-
 	delete logger;
 	logger = nullptr;
 
