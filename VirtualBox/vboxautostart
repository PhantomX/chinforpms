#!/bin/bash
# description: VirtualBox autostart service.

#[ "$(id -u)" -eq 0 ] || exit 1

unset INSTALL_DIR
[ -e /etc/vbox/vbox.cfg ] && . /etc/vbox/vbox.cfg

if [ -z "${INSTALL_DIR}" ]; then
  echo "VirtualBox is not installed properly"
  exit 1
fi

VBOXAUTOSTART_DB=/var/lib/virtualbox
VBOXAUTOSTART_CONFIG=/etc/vbox/autostart.cfg

exec="${INSTALL_DIR}/VBoxAutostart"

[ -x "${exec}" ] || exit 0

if ! [ -e "${VBOXAUTOSTART_CONFIG}" ]; then
  echo "Missing ${VBOXAUTOSTART_CONFIG}..."
  exit 0
fi

RETVAL=0

start_daemon() {
  usr="$1"
  shift
  /bin/su - ${usr} -c "$*"
}

vboxdrvrunning() {
  lsmod | grep -q "$1[^_-]"
}

start() {
  [ -z "${VBOXAUTOSTART_DB}" ] && exit 0
  [ -z "${VBOXAUTOSTART_CONFIG}" ] && exit 0
  echo -n "Starting VirtualBox VMs configured for autostart"
  vboxdrvrunning vboxdrv || {
    echo "VirtualBox kernel module not loaded!"
    RETVAL=1
  }
  PARAMS="--background --start --config ${VBOXAUTOSTART_CONFIG}"

  # prevent inheriting this setting to VBoxSVC
  unset VBOX_RELEASE_LOG_DEST

  if [ ${RETVAL} -eq 0 ] ;then
    for user in $(ls ${VBOXAUTOSTART_DB}/*.start) ;do
      start_daemon $(basename ${user} | sed -ne "s/\(.*\).start/\1/p") ${exec} ${PARAMS} > /dev/null 2>&1
    done
    RETVAL=$?
  fi

  return ${RETVAL}
}

stop() {
  [ -z "${VBOXAUTOSTART_DB}" ] && exit 0
  [ -z "${VBOXAUTOSTART_CONFIG}" ] && exit 0

  exit 0

  #echo -n "Stopping VirtualBox VMs configured for autostop"
  #vboxdrvrunning || {
  #  echo "VirtualBox kernel module not loaded!"
  #  RETVAL=1
  #}
  #PARAMS="--stop"
  #[ -n "${VBOXAUTOSTART_CONFIG}" ] && PARAMS="${PARAMS} -c ${VBOXAUTOSTART_CONFIG}"

  # prevent inheriting this setting to VBoxSVC
  #unset VBOX_RELEASE_LOG_DEST

  #if [ ${RETVAL} -eq 0 ] ;then
  #  for user in $(ls ${VBOXAUTOSTART_DB}/*.stop) ;do
  #    start_daemon $(basename ${user} | sed -ne "s/\(.*\).stop/\1/p") ${exec} ${PARAMS} > /dev/null 2>&1
  #  done
  #  RETVAL=$?
  #fi

  #return ${RETVAL}
}

case "$1" in
  start|stop)
    $1
    ;;
  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;
esac
exit ${RETVAL}
