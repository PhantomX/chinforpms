From 3ca002d783974539f5be4e683b67a58f4cc9fce0 Mon Sep 17 00:00:00 2001
From: Ingo Ruhnke <grumbel@gmail.com>
Date: Thu, 5 Dec 2019 23:39:07 +0100
Subject: [PATCH] Port xboxdrvctl to python3

---
 xboxdrvctl | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/xboxdrvctl b/xboxdrvctl
index 4807a11..88910eb 100755
--- a/xboxdrvctl
+++ b/xboxdrvctl
@@ -1,4 +1,4 @@
-#!/usr/bin/env python2
+#!/usr/bin/env python3
 
 ##  Xbox360 USB Gamepad Userspace Driver
 ##  Copyright (C) 2011 Ingo Ruhnke <grumbel@gmail.com>
@@ -37,23 +37,23 @@ group.add_option("-S", "--status",
                   help="print controller status")
 
 group.add_option("-s", "--slot", metavar="SLOT", type="int",
-                  dest="slot", 
+                  dest="slot",
                   help="use slot SLOT for actions")
 
 group.add_option("-l", "--led", metavar="NUM", type="int",
-                  dest="led", 
+                  dest="led",
                   help="set LED")
 
-group.add_option("-r", "--rumble", metavar="L:R", 
-                  dest="rumble", 
+group.add_option("-r", "--rumble", metavar="L:R",
+                  dest="rumble",
                   help="print controller status")
 
 group.add_option("-c", "--config", metavar="NUM", type="int",
-                  dest="config", 
+                  dest="config",
                   help="switches to controller configuration NUM")
 
 group.add_option("--shutdown", action="store_true",
-                  dest="shutdown", 
+                  dest="shutdown",
                   help="shuts down the daemon")
 
 parser.add_option_group(group)
@@ -69,9 +69,9 @@ elif options.bus == "auto":
     try:
         bus.get_object("org.seul.Xboxdrv", '/org/seul/Xboxdrv/Daemon')
     except dbus.exceptions.DBusException:
-				bus = dbus.SystemBus()
+        bus = dbus.SystemBus()
 else:
-    print "Error: invalid argument to --bus. Must be 'auto', 'session, or 'system'"
+    print("Error: invalid argument to --bus. Must be 'auto', 'session, or 'system'")
     exit()
 
 if options.status:
@@ -82,19 +82,19 @@ elif options.shutdown:
     daemon.Shutdown()
 else:
     if (options.led or options.rumble or options.config) and options.slot == None:
-        print "Error: --slot argument required"
+        print("Error: --slot argument required")
         exit()
     else:
         if options.slot != None:
             slot = bus.get_object("org.seul.Xboxdrv", '/org/seul/Xboxdrv/ControllerSlots/%d' % options.slot)
-    
+
             if options.led != None:
                 slot.SetLed(options.led)
 
             if options.rumble:
                 m = re.match('^(\d+):(\d+)$', options.rumble)
                 if not m:
-                    print "Error: invalid argument to --rumble"
+                    print("Error: invalid argument to --rumble")
                     exit()
                 else:
                     left  = int(m.group(1))
-- 
GitLab

