From 3be432ba99c90224dd903516571f0975a4571ac5 Mon Sep 17 00:00:00 2001
From: rpm-build <rpm-build>
Date: Mon, 8 May 2023 15:09:59 -0300
Subject: [PATCH] sharedgpures-fixup

---
 wine-tkg-sharedgpures-fences.patch        |   3 +-
 wine-tkg-sharedgpures-fixup-staging.patch | 106 ++++------------------
 wine-tkg-sharedgpures-textures.patch      |   4 +-
 3 files changed, 20 insertions(+), 93 deletions(-)

diff --git a/wine-tkg-sharedgpures-fences.patch b/wine-tkg-sharedgpures-fences.patch
index 503307a..d4bad51 100644
--- a/wine-tkg-sharedgpures-fences.patch
+++ b/wine-tkg-sharedgpures-fences.patch
@@ -14,12 +14,11 @@ diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
 index 4443a0cecfc..86fd7796868 100755
 --- a/dlls/winevulkan/make_vulkan
 +++ b/dlls/winevulkan/make_vulkan
-@@ -99,12 +99,10 @@ UNSUPPORTED_EXTENSIONS = [
+@@ -99,11 +99,9 @@ UNSUPPORTED_EXTENSIONS = [
      "VK_EXT_full_screen_exclusive",
      "VK_GOOGLE_display_timing",
      "VK_KHR_external_fence_win32",
 -    "VK_KHR_external_semaphore_win32",
-     "VK_KHR_map_memory2", # Needs wow64 handling and is useless for now.
      # Relates to external_semaphore and needs type conversions in bitflags.
      "VK_KHR_shared_presentable_image", # Needs WSI work.
      "VK_KHR_video_queue", # TODO Video extensions use separate headers + xml
diff --git a/wine-tkg-sharedgpures-fixup-staging.patch b/wine-tkg-sharedgpures-fixup-staging.patch
index 03fbdf3..dca62c4 100644
--- a/wine-tkg-sharedgpures-fixup-staging.patch
+++ b/wine-tkg-sharedgpures-fixup-staging.patch
@@ -10,7 +10,6 @@ Subject: [PATCH 1/5] winegstreamer: Don't flip RGB for Media Foundation
  dlls/winegstreamer/media_source.c  |  2 +-
  dlls/winegstreamer/quartz_parser.c |  2 +-
  dlls/winegstreamer/unixlib.h       |  3 ++
- dlls/winegstreamer/wg_parser.c     | 47 ++++++++++++++++--------------
  dlls/winegstreamer/wm_reader.c     |  6 ++--
  7 files changed, 36 insertions(+), 29 deletions(-)
 
@@ -22,6 +21,7 @@ index f9130d975ac..cc9f547b6fe 100644
  struct wg_parser_stream *wg_parser_get_stream(struct wg_parser *parser, uint32_t index);
  
  void wg_parser_stream_get_preferred_format(struct wg_parser_stream *stream, struct wg_format *format);
+ void wg_parser_stream_get_codec_format(struct wg_parser_stream *stream, struct wg_format *format);
 -void wg_parser_stream_enable(struct wg_parser_stream *stream, const struct wg_format *format);
 +void wg_parser_stream_enable(struct wg_parser_stream *stream, const struct wg_format *format, uint32_t flags);
  void wg_parser_stream_disable(struct wg_parser_stream *stream);
@@ -50,15 +50,15 @@ diff --git a/dlls/winegstreamer/media_source.c b/dlls/winegstreamer/media_source
 index 537363c1cdf..68912f4235b 100644
 --- a/dlls/winegstreamer/media_source.c
 +++ b/dlls/winegstreamer/media_source.c
-@@ -358,7 +358,7 @@ static void start_pipeline(struct media_source *source, struct source_async_comm
-             IMFMediaTypeHandler_GetCurrentMediaType(mth, &current_mt);
+@@ -358,7 +358,7 @@ static HRESULT media_stream_start(struct media_stream *stream, BOOL active, BOOL
  
-             mf_media_type_to_wg_format(current_mt, &format);
--            wg_parser_stream_enable(stream->wg_stream, &format);
-+            wg_parser_stream_enable(stream->wg_stream, &format, 0);
+     if (FAILED(hr = wg_format_from_stream_descriptor(stream->descriptor, &format)))
+         WARN("Failed to get wg_format from stream descriptor, hr %#lx\n", hr);
+-    wg_parser_stream_enable(stream->wg_stream, &format);
++    wg_parser_stream_enable(stream->wg_stream, &format, 0);
  
-             IMFMediaType_Release(current_mt);
-             IMFMediaTypeHandler_Release(mth);
+     if (FAILED(hr = IMFMediaEventQueue_QueueEventParamUnk(source->event_queue, active ? MEUpdatedStream : MENewStream,
+             &GUID_NULL, S_OK, (IUnknown *)&stream->IMFMediaStream_iface)))
 diff --git a/dlls/winegstreamer/quartz_parser.c b/dlls/winegstreamer/quartz_parser.c
 index eb90875909d..23ec764df16 100644
 --- a/dlls/winegstreamer/quartz_parser.c
@@ -90,65 +90,6 @@ index d976bedd7f5..1e5d61e3356 100644
  };
  
  struct wg_parser_stream_get_buffer_params
-diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
-index 3cb4ae828a0..ea51fe33b13 100644
---- a/dlls/winegstreamer/wg_parser.c
-+++ b/dlls/winegstreamer/wg_parser.c
-@@ -219,30 +219,33 @@ static NTSTATUS wg_parser_stream_enable(void *args)
- 
-     if (format->major_type == WG_MAJOR_TYPE_VIDEO)
-     {
--        bool flip = (format->u.video.height < 0);
--
--        switch (format->u.video.format)
-+        if (params->flags & STREAM_ENABLE_FLAG_FLIP_RGB)
-         {
--            case WG_VIDEO_FORMAT_BGRA:
--            case WG_VIDEO_FORMAT_BGRx:
--            case WG_VIDEO_FORMAT_BGR:
--            case WG_VIDEO_FORMAT_RGB15:
--            case WG_VIDEO_FORMAT_RGB16:
--                flip = !flip;
--                break;
-+            bool flip = (format->u.video.height < 0);
- 
--            case WG_VIDEO_FORMAT_AYUV:
--            case WG_VIDEO_FORMAT_I420:
--            case WG_VIDEO_FORMAT_NV12:
--            case WG_VIDEO_FORMAT_UYVY:
--            case WG_VIDEO_FORMAT_YUY2:
--            case WG_VIDEO_FORMAT_YV12:
--            case WG_VIDEO_FORMAT_YVYU:
--            case WG_VIDEO_FORMAT_UNKNOWN:
--                break;
--        }
-+            switch (format->u.video.format)
-+            {
-+                case WG_VIDEO_FORMAT_BGRA:
-+                case WG_VIDEO_FORMAT_BGRx:
-+                case WG_VIDEO_FORMAT_BGR:
-+                case WG_VIDEO_FORMAT_RGB15:
-+                case WG_VIDEO_FORMAT_RGB16:
-+                    flip = !flip;
-+                    break;
- 
--        gst_util_set_object_arg(G_OBJECT(stream->flip), "method", flip ? "vertical-flip" : "none");
-+                case WG_VIDEO_FORMAT_AYUV:
-+                case WG_VIDEO_FORMAT_I420:
-+                case WG_VIDEO_FORMAT_NV12:
-+                case WG_VIDEO_FORMAT_UYVY:
-+                case WG_VIDEO_FORMAT_YUY2:
-+                case WG_VIDEO_FORMAT_YV12:
-+                case WG_VIDEO_FORMAT_YVYU:
-+                case WG_VIDEO_FORMAT_UNKNOWN:
-+                    break;
-+            }
-+
-+            gst_util_set_object_arg(G_OBJECT(stream->flip), "method", flip ? "vertical-flip" : "none");
-+        }
-     }
- 
-     gst_pad_push_event(stream->my_sink, gst_event_new_reconfigure());
 diff --git a/dlls/winegstreamer/wm_reader.c b/dlls/winegstreamer/wm_reader.c
 index 169a3b19fdc..389bb3a915a 100644
 --- a/dlls/winegstreamer/wm_reader.c
@@ -253,7 +194,6 @@ Signed-off-by: Derek Lesho <dlesho@codeweavers.com>
  dlls/winegstreamer/quartz_parser.c | 1 +
  dlls/winegstreamer/unixlib.h       | 1 +
  dlls/winegstreamer/wg_format.c     | 3 +++
- dlls/winegstreamer/wg_parser.c     | 1 +
  5 files changed, 7 insertions(+)
 
 diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
@@ -313,20 +253,6 @@ index 032b39bb799..862b4bd4378 100644
          case WG_VIDEO_FORMAT_AYUV:  return GST_VIDEO_FORMAT_AYUV;
          case WG_VIDEO_FORMAT_I420:  return GST_VIDEO_FORMAT_I420;
          case WG_VIDEO_FORMAT_NV12:  return GST_VIDEO_FORMAT_NV12;
-diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
-index ea51fe33b13..a9bb29faf30 100644
---- a/dlls/winegstreamer/wg_parser.c
-+++ b/dlls/winegstreamer/wg_parser.c
-@@ -225,6 +225,7 @@ static NTSTATUS wg_parser_stream_enable(void *args)
- 
-             switch (format->u.video.format)
-             {
-+                case WG_VIDEO_FORMAT_RGBA:
-                 case WG_VIDEO_FORMAT_BGRA:
-                 case WG_VIDEO_FORMAT_BGRx:
-                 case WG_VIDEO_FORMAT_BGR:
--- 
-2.37.1
 
 From 223ed2e0af0a380106876137972c21e5e88c7e35 Mon Sep 17 00:00:00 2001
 From: Andrew Eikum <aeikum@codeweavers.com>
@@ -353,10 +279,10 @@ index 7d28fb26636..ddb58ea0a3f 100644
      DWORD type_count = 0;
      unsigned int i;
 @@ -892,6 +892,7 @@ static HRESULT media_stream_init_desc(struct media_stream *stream)
-             &MFVideoFormat_IYUV,
-             &MFVideoFormat_I420,
-             &MFVideoFormat_ARGB32,
-+            &MFVideoFormat_RGB32,
+             WG_VIDEO_FORMAT_YUY2,
+             WG_VIDEO_FORMAT_I420,
+             WG_VIDEO_FORMAT_BGRA,
++            WG_VIDEO_FORMAT_BGRx,
          };
  
          IMFMediaType *base_type = mf_media_type_from_wg_format(&format);
@@ -385,10 +311,10 @@ index 68912f4235b..2191cfb0ded 100644
      DWORD type_count = 0;
      unsigned int i;
 @@ -876,6 +876,7 @@ static HRESULT media_stream_init_desc(struct media_stream *stream)
-             &MFVideoFormat_I420,
-             &MFVideoFormat_ARGB32,
-             &MFVideoFormat_RGB32,
-+            &MFVideoFormat_ABGR32,
+             WG_VIDEO_FORMAT_YUY2,
+             WG_VIDEO_FORMAT_I420,
+             WG_VIDEO_FORMAT_BGRx,
++            WG_VIDEO_FORMAT_RGBA,
          };
  
          IMFMediaType *base_type = mf_media_type_from_wg_format(&format);
diff --git a/wine-tkg-sharedgpures-textures.patch b/wine-tkg-sharedgpures-textures.patch
index 700b290..9f14bdf 100644
--- a/wine-tkg-sharedgpures-textures.patch
+++ b/wine-tkg-sharedgpures-textures.patch
@@ -40,7 +40,7 @@ index 20f6e464915..beb93d87ad2 100755
      "vkGetPhysicalDeviceExternalFenceProperties" : {"dispatch" : False, "driver" : False, "thunk" : ThunkType.NONE},
      "vkGetPhysicalDeviceExternalSemaphoreProperties" : {"dispatch" : False, "driver" : False, "thunk" : ThunkType.NONE},
      "vkGetPhysicalDeviceImageFormatProperties2" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
-@@ -211,12 +211,12 @@ FUNCTION_OVERRIDES = {
+@@ -211,14 +211,14 @@ FUNCTION_OVERRIDES = {
      "vkGetDeviceProcAddr" : {"dispatch" : False, "driver" : True, "thunk" : ThunkType.NONE, "loader_thunk" : ThunkType.NONE},
      "vkGetDeviceQueue" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.NONE},
      "vkGetDeviceQueue2" : {"dispatch": True, "driver" : False, "thunk" : ThunkType.NONE},
@@ -49,7 +49,9 @@ index 20f6e464915..beb93d87ad2 100755
 +    "vkAllocateMemory" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
 +    "vkFreeMemory" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
      "vkMapMemory" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
+     "vkMapMemory2KHR" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
      "vkUnmapMemory" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
+     "vkUnmapMemory2KHR" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
 -    "vkCreateBuffer" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
 -    "vkCreateImage" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.PRIVATE},
 +    "vkCreateBuffer" : {"dispatch" : True, "driver" : False, "thunk" : ThunkType.NONE},
-- 
2.40.1

