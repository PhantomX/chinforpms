From fc1afbb4501eb455de23aa7d057a3dadc86d4e87 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sat, 7 Dec 2024 10:28:08 -0300
Subject: [PATCH] tkg: cpu topology fixup 2

---
 dlls/ntdll/unix/thread.c | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

diff --git a/dlls/ntdll/unix/thread.c b/dlls/ntdll/unix/thread.c
index e3bd19c..dc1d1ea 100644
--- a/dlls/ntdll/unix/thread.c
+++ b/dlls/ntdll/unix/thread.c
@@ -2591,22 +2591,29 @@ ULONG WINAPI NtGetCurrentProcessorNumber(void)
 {
     ULONG processor;
 
-#if defined(__linux__) && defined(__NR_getcpu)
-    int res = syscall(__NR_getcpu, &processor, NULL, NULL);
-    if (res != -1)
+#if defined(HAVE_SCHED_GETCPU)
+    int res = sched_getcpu();
+    if (res >= 0)
     {
         struct cpu_topology_override *override = get_cpu_topology_override();
         unsigned int i;
 
         if (!override)
-            return processor;
+            return res;
 
         for (i = 0; i < override->cpu_count; ++i)
-            if (override->host_cpu_id[i] == processor)
+            if (override->host_cpu_id[i] == res)
                 return i;
 
         WARN("Thread is running on processor which is not in the defined override.\n");
     }
+#elif defined(__APPLE__) && (defined(__x86_64__) || defined(__i386__))
+    struct {
+        unsigned long p1, p2;
+    } p;
+    __asm__ __volatile__("sidt %[p]" : [p] "=&m"(p));
+    processor = (ULONG)(p.p1 & 0xfff);
+    return processor;
 #endif
 
     if (peb->NumberOfProcessors > 1)
-- 
2.47.1

