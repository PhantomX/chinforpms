From c94e220bc24449e870a934875550ba289866f1ae Mon Sep 17 00:00:00 2001
From: rpm-build <rpm-build>
Date: Sat, 24 Aug 2024 20:22:08 -0300
Subject: [PATCH] tkg: proton-tkg-additions fixup

---
 wine-tkg-proton-tkg-additions.patch | 136 ----------------------------
 1 file changed, 136 deletions(-)

diff --git a/wine-tkg-proton-tkg-additions.patch b/wine-tkg-proton-tkg-additions.patch
index 71218e2..0bf9faa 100644
--- a/wine-tkg-proton-tkg-additions.patch
+++ b/wine-tkg-proton-tkg-additions.patch
@@ -239,142 +239,6 @@ index 91cb02b902e..9767fdcf681 100644
      DWORD       net_wm_state;   /* bit mask of active x11drv_net_wm_state values */
      Window      embedder;       /* window id of embedder */
 
-From c5aa20a70a5e681ba718feb7db9adc357cb7bec0 Mon Sep 17 00:00:00 2001
-From: Paul Gofman <pgofman@codeweavers.com>
-Date: Tue, 31 Aug 2021 00:41:15 +0300
-Subject: [PATCH] winex11.drv: HACK: Mind insert_after X11DRV_WindowPosChanged
- in some cases.
-
-Fixes FH4 rendering black window until focus is lost.
-
-CW-Bug-Id: #19335
----
- dlls/winex11.drv/window.c | 50 ++++++++++++++++++++++++++++++++++-----
- 1 file changed, 44 insertions(+), 6 deletions(-)
-
-diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
-index 4cd2324bff2..815a6279e59 100644
---- a/dlls/winex11.drv/window.c
-+++ b/dlls/winex11.drv/window.c
-@@ -1481,16 +1481,17 @@ void X11DRV_X_to_window_rect( struct x11drv_win_data *data, RECT *rect, int x, i
-  *
-  * Synchronize the X window position with the Windows one
-  */
--static void sync_window_position( struct x11drv_win_data *data,
-+static HWND sync_window_position( struct x11drv_win_data *data,
-                                   UINT swp_flags, const RECT *old_window_rect,
-                                   const RECT *old_whole_rect, const RECT *old_client_rect )
- {
-     DWORD style = NtUserGetWindowLongW( data->hwnd, GWL_STYLE );
-     DWORD ex_style = NtUserGetWindowLongW( data->hwnd, GWL_EXSTYLE );
-+    HWND prev_window = NULL;
-     XWindowChanges changes;
-     unsigned int mask = 0;
- 
--    if (data->managed && data->iconic) return;
-+    if (data->managed && data->iconic) return NULL;
- 
-     /* resizing a managed maximized window is not allowed */
-     if (!(style & WS_MAXIMIZE) || !data->managed)
-@@ -1529,9 +1530,10 @@ static void sync_window_position( struct x11drv_win_data *data,
-     {
-         /* find window that this one must be after */
-         HWND prev = NtUserGetWindowRelative( data->hwnd, GW_HWNDPREV );
-+
-         while (prev && !(NtUserGetWindowLongW( prev, GWL_STYLE ) & WS_VISIBLE))
-             prev = NtUserGetWindowRelative( prev, GW_HWNDPREV );
--        if (!prev)  /* top child */
-+        if (!(prev_window = prev))  /* top child */
-         {
-             changes.stack_mode = Above;
-             mask |= CWStackMode;
-@@ -1577,6 +1580,8 @@ static void sync_window_position( struct x11drv_win_data *data,
-            data->whole_rect.right - data->whole_rect.left,
-            data->whole_rect.bottom - data->whole_rect.top,
-            changes.sibling, mask, data->configure_serial );
-+
-+    return prev_window;
- }
- 
- 
-@@ -2733,6 +2738,25 @@ BOOL CDECL X11DRV_WindowPosChanging( HWND hwnd, HWND insert_after, UINT swp_flag
- }
- 
- 
-+static void restack_windows( struct x11drv_win_data *data, HWND prev )
-+{
-+    struct x11drv_win_data *prev_data;
-+
-+    TRACE("data->hwnd %p, prev %p.\n", data->hwnd, prev);
-+
-+    while (prev)
-+    {
-+        if (!(prev_data = get_win_data( prev ))) break;
-+
-+        TRACE( "Raising window %p.\n", prev );
-+
-+        if (prev_data->whole_window && data->display == prev_data->display)
-+            XRaiseWindow( prev_data->display, prev_data->whole_window );
-+        release_win_data( prev_data );
-+        prev = NtUserGetWindowRelative( prev, GW_HWNDPREV );
-+    }
-+}
-+
- /***********************************************************************
-  *     WindowPosChanged   (X11DRV.@)
-  */
-@@ -2745,6 +2769,7 @@ void CDECL X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags
-     struct x11drv_win_data *data;
-     DWORD new_style = NtUserGetWindowLongW( hwnd, GWL_STYLE );
-     RECT old_window_rect, old_whole_rect, old_client_rect;
-+    HWND prev_window = NULL;
-     int event_type;
- 
-     if (!(data = get_win_data( hwnd ))) return;
-@@ -2847,8 +2872,8 @@ void CDECL X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags
- 
-     /* don't change position if we are about to minimize or maximize a managed window */
-     if ((!event_type || event_type == PropertyNotify) &&
--        !(data->managed && (swp_flags & SWP_STATECHANGED) && (new_style & (WS_MINIMIZE|WS_MAXIMIZE))))
--        sync_window_position( data, swp_flags, &old_window_rect, &old_whole_rect, &old_client_rect );
-+            !(data->managed && (swp_flags & SWP_STATECHANGED) && (new_style & (WS_MINIMIZE|WS_MAXIMIZE))))
-+        prev_window = sync_window_position( data, swp_flags, &old_window_rect, &old_whole_rect, &old_client_rect );
- 
-     if ((new_style & WS_VISIBLE) &&
-         ((new_style & WS_MINIMIZE) || is_window_rect_mapped( rectWindow )))
-@@ -2864,6 +2889,10 @@ void CDECL X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags
-             release_win_data( data );
-             if (needs_icon) fetch_icon_data( hwnd, 0, 0 );
-             if (needs_map) map_window( hwnd, new_style );
-+
-+            if (!(data = get_win_data( hwnd ))) return;
-+            restack_windows( data, prev_window );
-+            release_win_data( data );
-             return;
-         }
-         else if ((swp_flags & SWP_STATECHANGED) && (!data->iconic != !(new_style & WS_MINIMIZE)))
-@@ -2880,10 +2909,20 @@ void CDECL X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags
-         else
-         {
-             if (swp_flags & (SWP_FRAMECHANGED|SWP_STATECHANGED)) set_wm_hints( data );
--            if (!event_type || event_type == PropertyNotify) update_net_wm_states( data );
-+            if (!event_type || event_type == PropertyNotify)
-+            {
-+                update_net_wm_states( data );
-+                if (!prev_window && insert_after && data->net_wm_state & (1 << NET_WM_STATE_FULLSCREEN))
-+                {
-+                    prev_window = NtUserGetWindowRelative( hwnd, GW_HWNDPREV );
-+                    if (prev_window != insert_after) prev_window = NULL;
-+                }
-+            }
-         }
-     }
- 
-+    restack_windows( data, prev_window );
-+
-     XFlush( data->display );  /* make sure changes are done before we start painting again */
-     if (data->surface && data->vis.visualid != default_visual.visualid)
-         data->surface->funcs->flush( data->surface );
 From 399675bd511cbfd57a44e3afaae32a9ddf6dac87 Mon Sep 17 00:00:00 2001
 From: Zhiyi Zhang <zzhang@codeweavers.com>
 Date: Wed, 11 Nov 2020 10:41:42 +0800
-- 
2.46.0

