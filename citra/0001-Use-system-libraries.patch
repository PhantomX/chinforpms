From ef2255496fe96a7441ad0f75c6606d504fbf9553 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Thu, 19 Oct 2023 20:05:46 -0300
Subject: [PATCH] Use system libraries

---
 CMakeLists.txt            |  3 +--
 externals/CMakeLists.txt  | 37 ++++++++++++++++++++++++++++++++++---
 src/common/CMakeLists.txt | 10 ++++++++--
 3 files changed, 43 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1344d06..9109290 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,7 +12,6 @@ set(CMAKE_POLICY_DEFAULT_CMP0063 NEW)
 
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules")
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/externals/cmake-modules")
-include(DownloadExternals)
 include(CMakeDependentOption)
 
 project(citra LANGUAGES C CXX ASM)
@@ -147,7 +146,7 @@ function(check_submodules_present)
 endfunction()
 if (EXISTS "${PROJECT_SOURCE_DIR}/.git/objects")
     # only check submodules when source is obtained via Git
-    check_submodules_present()
+    #check_submodules_present()
 endif()
 
 configure_file(${PROJECT_SOURCE_DIR}/dist/compatibility_list/compatibility_list.qrc
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index d695d25..143f5dc 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -8,7 +8,6 @@ else()
 endif()
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/CMakeModules)
-include(DownloadExternals)
 include(ExternalProject)
 
 # Boost
@@ -41,9 +40,19 @@ else()
 endif()
 
 # Catch2
+if (ENABLE_TESTS)
+find_package(Catch2 3.1.0 REQUIRED CONFIG)
+if(Catch2_FOUND)
+  message(STATUS "Using the system Catch")
+  add_library(catch-shared INTERFACE)
+  target_link_libraries(catch-shared INTERFACE Catch2::Catch2WithMain)
+  add_library(Catch2::Catch2WithMain ALIAS catch-shared)
+else()
 set(CATCH_INSTALL_DOCS OFF CACHE BOOL "")
 set(CATCH_INSTALL_EXTRAS OFF CACHE BOOL "")
 add_subdirectory(catch2)
+endif()
+endif()
 
 # Crypto++
 if(USE_SYSTEM_CRYPTOPP)
@@ -182,6 +191,14 @@ if (NOT FOUND_FFMPEG_HEADERS)
     target_include_directories(library-headers SYSTEM INTERFACE ./library-headers/ffmpeg/include)
 endif()
 
+find_package(tsl-robin-map)
+if(tsl-robin-map_FOUND)
+    message(STATUS "Using the system tls_robin_map")
+    add_library(tsl-robin-map-shared INTERFACE)
+    target_link_libraries(tsl-robin-map-shared INTERFACE tsl::robin_map)
+    add_library(tsl::robin_map ALIAS tsl-robin-map-shared)
+endif()
+
 # SoundTouch
 if(NOT USE_SYSTEM_SOUNDTOUCH)
     set(INTEGER_SAMPLES ON CACHE BOOL "")
@@ -211,12 +228,19 @@ endif()
 
 # Zstandard
 if(USE_SYSTEM_ZSTD)
-    find_package(zstd REQUIRED)
+    find_package(zstd)
+    if(NOT zstd_FOUND)
+      pkg_check_modules(libzstd_shared REQUIRED IMPORTED_TARGET libzstd)
+    endif()
     add_library(zstd INTERFACE)
-    if(TARGET zstd::libzstd_shared)
+    if(TARGET zstd::libzstd_shared OR TARGET PkgConfig::libzstd_shared ) 
         message(STATUS "Found system Zstandard")
     endif()
+    if(TARGET zstd::libzstd_shared)
     target_link_libraries(zstd INTERFACE zstd::libzstd_shared)
+    else()
+      target_link_libraries(zstd INTERFACE PkgConfig::libzstd_shared)
+    endif()
 else()
     set(ZSTD_LEGACY_SUPPORT OFF)
     set(ZSTD_BUILD_PROGRAMS OFF)
@@ -376,10 +400,16 @@ endif()
 
 # vulkan-headers
 add_library(vulkan-headers INTERFACE)
+find_package(VulkanHeaders)
+if(VulkanHeaders_FOUND)
+    message(STATUS "Using the system vulkan-headers")
+    target_link_libraries(vulkan-headers INTERFACE Vulkan::Headers)
+else()
 target_include_directories(vulkan-headers SYSTEM INTERFACE ./vulkan-headers/include)
 if (APPLE)
     target_include_directories(vulkan-headers SYSTEM INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/MoltenVK)
 endif()
+endif()
 
 # adrenotools
 if (ANDROID AND "arm64" IN_LIST ARCHITECTURE)
diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
index 6b97b68..cd00b95 100644
--- a/src/common/CMakeLists.txt
+++ b/src/common/CMakeLists.txt
@@ -149,12 +149,18 @@ add_library(citra_common STATIC
     web_result.h
     x64/cpu_detect.cpp
     x64/cpu_detect.h
-    x64/xbyak_abi.h
-    x64/xbyak_util.h
     zstd_compression.cpp
     zstd_compression.h
 )
 
+if(NOT TARGET xbyak::xbyak)
+target_sources(citra_common
+    PRIVATE
+      x64/xbyak_abi.h
+      x64/xbyak_util.h
+)
+endif()
+
 if (APPLE)
     target_sources(citra_common PUBLIC
         apple_authorization.h
-- 
2.41.0

