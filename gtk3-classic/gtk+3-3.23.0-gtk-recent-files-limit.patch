diff -up gtk+-3.23.3/gtk/gtkfilechooserwidget.c.recent gtk+-3.23.3/gtk/gtkfilechooserwidget.c
--- gtk+-3.23.3/gtk/gtkfilechooserwidget.c.recent	2018-08-28 17:14:47.000000000 -0300
+++ gtk+-3.23.3/gtk/gtkfilechooserwidget.c	2018-09-03 09:29:49.386213416 -0300
@@ -428,8 +428,6 @@ enum {
         G_TYPE_STRING,            /* MODEL_COL_LOCATION_TEXT */ \
         PANGO_TYPE_ELLIPSIZE_MODE /* MODEL_COL_ELLIPSIZE */
 
-#define DEFAULT_RECENT_FILES_LIMIT 50
-
 /* Icon size for if we can't get it from the theme */
 #define FALLBACK_ICON_SIZE 16
 
@@ -7477,6 +7475,22 @@ recent_item_is_private (GtkRecentInfo *i
   return is_private;
 }
 
+static gint
+get_recent_files_limit (GtkWidget *widget)
+{
+  GtkSettings *settings;
+  gint limit;
+
+  if (gtk_widget_has_screen (widget))
+    settings = gtk_settings_get_for_screen (gtk_widget_get_screen (widget));
+  else
+    settings = gtk_settings_get_default ();
+
+  g_object_get (G_OBJECT (settings), "gtk-recent-files-limit", &limit, NULL);
+
+  return limit;
+}
+
 /* Populates the file system model with the GtkRecentInfo* items
  * in the provided list; frees the items
  */
@@ -7489,7 +7503,7 @@ populate_model_with_recent_items (GtkFil
   GList *l;
   gint n;
 
-  limit = DEFAULT_RECENT_FILES_LIMIT;
+  limit = get_recent_files_limit (GTK_WIDGET (impl));
 
   n = 0;
 
diff -up gtk+-3.23.3/gtk/gtkrecentchooser.c.recent gtk+-3.23.3/gtk/gtkrecentchooser.c
--- gtk+-3.23.3/gtk/gtkrecentchooser.c.recent	2017-11-16 11:21:24.000000000 -0200
+++ gtk+-3.23.3/gtk/gtkrecentchooser.c	2018-09-03 09:28:20.028513730 -0300
@@ -227,7 +227,10 @@ gtk_recent_chooser_default_init (GtkRece
    * GtkRecentChooser:limit:
    *
    * The maximum number of recently used resources to be displayed,
-   * or -1 to display all items.
+   * or -1 to display all items. By default, the
+   * GtkSetting:gtk-recent-files-limit setting is respected: you can
+   * override that limit on a particular instance of #GtkRecentChooser
+   * by setting this property.
    *
    * Since: 2.10
    */
@@ -235,7 +238,7 @@ gtk_recent_chooser_default_init (GtkRece
                                        g_param_spec_int ("limit",
                                                          P_("Limit"),
                                                          P_("The maximum number of items to be displayed"),
-                                                         -1, G_MAXINT, 50,
+                                                         50, G_MAXINT, 50,
                                                          GTK_PARAM_READWRITE|G_PARAM_EXPLICIT_NOTIFY));
 
   /**
diff -up gtk+-3.23.3/gtk/gtkrecentchooserdefault.c.recent gtk+-3.23.3/gtk/gtkrecentchooserdefault.c
--- gtk+-3.23.3/gtk/gtkrecentchooserdefault.c.recent	2017-11-16 11:21:24.000000000 -0200
+++ gtk+-3.23.3/gtk/gtkrecentchooserdefault.c	2018-09-03 09:28:20.028513730 -0300
@@ -169,8 +169,6 @@ enum {
 #define NUM_CHARS 40
 #define NUM_LINES 9
 
-#define DEFAULT_RECENT_FILES_LIMIT 50
-
 
 
 /* GObject */
@@ -222,6 +220,7 @@ static void set_current_filter        (G
 static GtkIconTheme *get_icon_theme_for_widget (GtkWidget   *widget);
 static gint          get_icon_size_for_widget  (GtkWidget   *widget,
 						GtkIconSize  icon_size);
+static gint          get_recent_files_limit    (GtkWidget   *widget);
 
 static void reload_recent_items (GtkRecentChooserDefault *impl);
 static void chooser_set_model   (GtkRecentChooserDefault *impl);
@@ -853,7 +852,7 @@ reload_recent_items (GtkRecentChooserDef
 		  			      GTK_ICON_SIZE_BUTTON);
 
   if (!impl->priv->limit_set)
-    impl->priv->limit = DEFAULT_RECENT_FILES_LIMIT;
+    impl->priv->limit = get_recent_files_limit (widget);
 
   set_busy_cursor (impl, TRUE);
 
@@ -1357,6 +1356,22 @@ get_icon_size_for_widget (GtkWidget   *w
   return FALLBACK_ICON_SIZE;
 }
 
+static gint
+get_recent_files_limit (GtkWidget *widget)
+{
+  GtkSettings *settings;
+  gint limit;
+
+  if (gtk_widget_has_screen (widget))
+    settings = gtk_settings_get_for_screen (gtk_widget_get_screen (widget));
+  else
+    settings = gtk_settings_get_default ();
+  
+  g_object_get (G_OBJECT (settings), "gtk-recent-files-limit", &limit, NULL);
+
+  return limit;
+}
+
 static void
 recent_manager_changed_cb (GtkRecentManager *manager,
 			   gpointer          user_data)
diff -up gtk+-3.23.3/gtk/gtksettings.c.recent gtk+-3.23.3/gtk/gtksettings.c
--- gtk+-3.23.3/gtk/gtksettings.c.recent	2018-07-30 18:08:01.000000000 -0300
+++ gtk+-3.23.3/gtk/gtksettings.c	2018-09-03 09:28:20.028513730 -0300
@@ -1069,8 +1069,6 @@ gtk_settings_class_init (GtkSettingsClas
    * -1 means every recently used file stored.
    *
    * Since: 2.12
-   *
-   * Deprecated: 3.10: This setting is ignored
    */
   result = settings_install_property_parser (class,
                                              g_param_spec_int ("gtk-recent-files-limit",
@@ -1078,7 +1076,7 @@ gtk_settings_class_init (GtkSettingsClas
                                                                P_("Number of recently used files"),
                                                                -1, G_MAXINT,
                                                                50,
-                                                               GTK_PARAM_READWRITE | G_PARAM_DEPRECATED),
+                                                               GTK_PARAM_READWRITE),
                                              NULL);
   g_assert (result == PROP_RECENT_FILES_LIMIT);
 
