From 9cecebfe8324a3e38625b81c8b96b3d7d63d36bd Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sat, 18 May 2024 17:53:40 -0300
Subject: [PATCH] shared-patched: cmake

---
 CMakeLists.txt                                 | 16 ++++++++--------
 ShadercConfig.cmake.in                         |  6 +++---
 cmake/{shaderc.pc.in => shaderc-patched.pc.in} |  2 +-
 libshaderc/CMakeLists.txt                      | 18 +++++-------------
 4 files changed, 17 insertions(+), 25 deletions(-)
 rename cmake/{shaderc.pc.in => shaderc-patched.pc.in} (93%)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 625e924..55eefb4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,7 +14,7 @@
 
 cmake_minimum_required(VERSION 3.17.2)
 
-project(shaderc VERSION 2024.3 LANGUAGES C CXX)
+project(shaderc-patched VERSION 2024.3 LANGUAGES C CXX)
 enable_testing()
 
 if ("${CMAKE_BUILD_TYPE}" STREQUAL "")
@@ -153,26 +153,26 @@ endfunction()
 
 if(SHADERC_ENABLE_INSTALL)
   include(CMakePackageConfigHelpers)
-  set(SHADERC_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/Shaderc")
+  set(SHADERC_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/ShadercPatched")
   install(
     EXPORT ShadercTargets
-    FILE ShadercTargets.cmake
-    NAMESPACE Shaderc::
+    FILE ShadercPatchedTargets.cmake
+    NAMESPACE ShadercPatched::
     DESTINATION "${SHADERC_INSTALL_CMAKEDIR}"
   )
   configure_package_config_file(ShadercConfig.cmake.in
-    "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfig.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/ShadercPatchedConfig.cmake"
     INSTALL_DESTINATION "${SHADERC_INSTALL_CMAKEDIR}"
   )
   write_basic_package_version_file(
-    "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfigVersion.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/ShadercPatchedConfigVersion.cmake"
     VERSION "${CMAKE_PROJECT_VERSION}"
     COMPATIBILITY SameMajorVersion
   )
   install(
     FILES
-      "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfig.cmake"
-      "${CMAKE_CURRENT_BINARY_DIR}/ShadercConfigVersion.cmake"
+      "${CMAKE_CURRENT_BINARY_DIR}/ShadercPatchedConfig.cmake"
+      "${CMAKE_CURRENT_BINARY_DIR}/ShadercPatchedConfigVersion.cmake"
       DESTINATION "${SHADERC_INSTALL_CMAKEDIR}"
   )
 endif()
diff --git a/ShadercConfig.cmake.in b/ShadercConfig.cmake.in
index bfdf945..f2e27b6 100644
--- a/ShadercConfig.cmake.in
+++ b/ShadercConfig.cmake.in
@@ -1,10 +1,10 @@
 @PACKAGE_INIT@
 
-include("${CMAKE_CURRENT_LIST_DIR}/ShadercTargets.cmake")
+include("${CMAKE_CURRENT_LIST_DIR}/ShadercPatchedTargets.cmake")
 
 check_required_components(Shaderc)
 
-get_target_property(TEMP_SHADERC_LOCATION Shaderc::shaderc_shared LOCATION)
-message(STATUS "Found Shaderc: ${TEMP_SHADERC_LOCATION}")
+get_target_property(TEMP_SHADERC_LOCATION ShadercPatched::shaderc_shared LOCATION)
+message(STATUS "Found ShadercPatched: ${TEMP_SHADERC_LOCATION}")
 unset(TEMP_SHADERC_LOCATION)
 
diff --git a/cmake/shaderc.pc.in b/cmake/shaderc-patched.pc.in
similarity index 93%
rename from cmake/shaderc.pc.in
rename to cmake/shaderc-patched.pc.in
index 6d217bf..84600c8 100644
--- a/cmake/shaderc.pc.in
+++ b/cmake/shaderc-patched.pc.in
@@ -3,7 +3,7 @@ exec_prefix=${prefix}
 libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
 includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
 
-Name: shaderc
+Name: shaderc-patched
 Description: Tools and libraries for Vulkan shader compilation
 Version: @CURRENT_VERSION@
 URL: https://github.com/google/shaderc
diff --git a/libshaderc/CMakeLists.txt b/libshaderc/CMakeLists.txt
index 4192998..70376e8 100644
--- a/libshaderc/CMakeLists.txt
+++ b/libshaderc/CMakeLists.txt
@@ -12,7 +12,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-project(libshaderc)
+project(libshaderc-patched)
 
 # Even though shaderc.hpp is a headers-only library, adding
 # a dependency here will force clients of the library to rebuild
@@ -35,6 +35,9 @@ target_compile_definitions(shaderc_shared
     PUBLIC SHADERC_SHAREDLIB
 )
 
+set_target_properties(shaderc_shared PROPERTIES OUTPUT_NAME "shaderc-patched_shared")
+set_target_properties(shaderc_shared PROPERTIES SOVERSION 1)
+
 if(SHADERC_ENABLE_INSTALL)
   install(
     FILES
@@ -44,7 +47,7 @@ if(SHADERC_ENABLE_INSTALL)
       include/shaderc/shaderc.h
       include/shaderc/shaderc.hpp
     DESTINATION
-      ${CMAKE_INSTALL_INCLUDEDIR}/shaderc)
+      ${CMAKE_INSTALL_INCLUDEDIR}/shaderc-patched)
 
   install(TARGETS shaderc_shared
     EXPORT ShadercTargets
@@ -65,17 +68,6 @@ set(SHADERC_LIBS
 
 target_link_libraries(shaderc_shared PRIVATE ${SHADERC_LIBS})
 
-shaderc_add_tests(
-  TEST_PREFIX shaderc_shared
-  LINK_LIBS shaderc_shared SPIRV-Tools
-  INCLUDE_DIRS include ${shaderc_SOURCE_DIR}/libshaderc_util/include ${glslang_SOURCE_DIR}
-               ${spirv-tools_SOURCE_DIR}/include
-               ${SPIRV-Headers_SOURCE_DIR}/include
-  TEST_NAMES
-    shaderc
-    shaderc_cpp
-    shaderc_private)
-
 if(${SHADERC_ENABLE_TESTS})
   add_executable(shaderc_c_smoke_test ./src/shaderc_c_smoke_test.c)
   shaderc_default_c_compile_options(shaderc_c_smoke_test)
-- 
2.46.0

