From e275cbb2d79007761976c7e2ee2a01a57c59b1f6 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sun, 22 May 2022 20:12:38 -0300
Subject: [PATCH] Use system libraries

---
 cmake/SearchForStuff.cmake | 39 +++++++++++++++++++++++++++-----------
 common/CMakeLists.txt      |  2 +-
 pcsx2/CDVD/ChdFileReader.h |  2 +-
 3 files changed, 30 insertions(+), 13 deletions(-)

diff --git a/cmake/SearchForStuff.cmake b/cmake/SearchForStuff.cmake
index d44ec3c..507100a 100644
--- a/cmake/SearchForStuff.cmake
+++ b/cmake/SearchForStuff.cmake
@@ -208,11 +208,10 @@ endif()
 
 find_optional_system_library(fmt 3rdparty/fmt/fmt 7.1.3)
 find_optional_system_library(ryml 3rdparty/rapidyaml/rapidyaml 0.4.0)
-find_optional_system_library(zstd 3rdparty/zstd 1.4.5)
-if (${zstd_TYPE} STREQUAL System)
-	alias_library(Zstd::Zstd zstd::libzstd_shared)
-	alias_library(pcsx2-zstd zstd::libzstd_shared)
-endif()
+
+check_lib(zstd libzstd)
+alias_library(Zstd::Zstd PkgConfig::zstd)
+alias_library(pcsx2-zstd PkgConfig::zstd)
 find_optional_system_library(libzip 3rdparty/libzip 1.8.0)
 
 if(QT_BUILD)
@@ -236,8 +235,16 @@ if(QT_BUILD)
 	find_optional_system_library(SDL2 3rdparty/sdl2 2.0.22)
 endif()
 
+if(WIN32)
 add_subdirectory(3rdparty/lzma EXCLUDE_FROM_ALL)
-add_subdirectory(3rdparty/libchdr EXCLUDE_FROM_ALL)
+endif()
+
+check_lib(CHDR libchdr)
+if(NOT CHDR_FOUND)
+	add_subdirectory(3rdparty/libchdr EXCLUDE_FROM_ALL)
+else()
+	alias_library(chdr-static PkgConfig::CHDR)
+endif()
 
 if(USE_NATIVE_TOOLS)
 	add_subdirectory(tools/bin2cpp EXCLUDE_FROM_ALL)
@@ -251,7 +258,13 @@ endif()
 add_subdirectory(3rdparty/jpgd EXCLUDE_FROM_ALL)
 add_subdirectory(3rdparty/simpleini EXCLUDE_FROM_ALL)
 add_subdirectory(3rdparty/imgui EXCLUDE_FROM_ALL)
-add_subdirectory(3rdparty/cpuinfo EXCLUDE_FROM_ALL)
+
+check_lib(CPUINFO libcpuinfo)
+if(NOT CPUINFO_FOUND)
+	add_subdirectory(3rdparty/cpuinfo EXCLUDE_FROM_ALL)
+else()
+	alias_library(cpuinfo PkgConfig::CPUINFO)
+endif()
 
 if(USE_OPENGL)
 	add_subdirectory(3rdparty/glad EXCLUDE_FROM_ALL)
@@ -259,12 +272,16 @@ endif()
 
 if(USE_VULKAN)
 	add_subdirectory(3rdparty/glslang EXCLUDE_FROM_ALL)
-	add_subdirectory(3rdparty/vulkan-headers EXCLUDE_FROM_ALL)
 endif()
 
 if(CUBEB_API)
-	add_subdirectory(3rdparty/cubeb EXCLUDE_FROM_ALL)
-	target_compile_options(cubeb PRIVATE "-w")
-	target_compile_options(speex PRIVATE "-w")
+	find_package(cubeb)
+	if(cubeb_FOUND)
+		message(STATUS "Using the system cubeb")
+	else()
+		add_subdirectory(3rdparty/cubeb EXCLUDE_FROM_ALL)
+		target_compile_options(cubeb PRIVATE "-w")
+		target_compile_options(speex PRIVATE "-w")
+	endif()
 endif()
 
diff --git a/common/CMakeLists.txt b/common/CMakeLists.txt
index 0b535a3..43d1dad 100644
--- a/common/CMakeLists.txt
+++ b/common/CMakeLists.txt
@@ -134,7 +134,7 @@ endif()
 
 if(USE_VULKAN)
 	target_link_libraries(common PUBLIC
-		Vulkan-Headers glslang
+		glslang
 	)
 	target_sources(common PRIVATE
 		Vulkan/ShaderCache.cpp
diff --git a/pcsx2/CDVD/ChdFileReader.h b/pcsx2/CDVD/ChdFileReader.h
index 785e457..935b6bf 100644
--- a/pcsx2/CDVD/ChdFileReader.h
+++ b/pcsx2/CDVD/ChdFileReader.h
@@ -15,7 +15,7 @@
 
 #pragma once
 #include "ThreadedFileReader.h"
-#include "libchdr/chd.h"
+#include "chd.h"
 #include <vector>
 
 class ChdFileReader : public ThreadedFileReader
-- 
2.37.3

