From d27db56353a654ea355d6965df33beebd9d57ad8 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Mon, 4 Apr 2022 20:25:52 -0300
Subject: [PATCH] Use system libraries

FindMBETLS.cmake from Dolphin-emu project:
https://github.com/dolphin-emu/dolphin
https://github.com/dolphin-emu/dolphin/raw/master/CMake/FindMBEDTLS.cmake
---
 CMakeLists.txt                           |  4 ---
 externals/CMakeLists.txt                 | 34 ++++++++++++++++++++----
 externals/find-modules/FindMBEDTLS.cmake | 23 ++++++++++++++++
 3 files changed, 52 insertions(+), 9 deletions(-)
 create mode 100644 externals/find-modules/FindMBEDTLS.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index eed57cc..62f9eb7 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,7 +6,6 @@ cmake_minimum_required(VERSION 3.15)
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules")
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/externals/cmake-modules")
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/externals/find-modules")
-include(DownloadExternals)
 include(CMakeDependentOption)
 
 project(yuzu)
@@ -81,9 +80,6 @@ function(check_submodules_present)
     endforeach()
 endfunction()
 
-if(EXISTS ${PROJECT_SOURCE_DIR}/.gitmodules)
-    check_submodules_present()
-endif()
 configure_file(${PROJECT_SOURCE_DIR}/dist/compatibility_list/compatibility_list.qrc
                ${PROJECT_BINARY_DIR}/dist/compatibility_list/compatibility_list.qrc
                COPYONLY)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index 6d04ace..fe7842b 100755
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -3,7 +3,6 @@
 
 list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMakeModules")
 list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/externals/find-modules")
-include(DownloadExternals)
 
 # xbyak
 if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
@@ -34,8 +33,19 @@ add_subdirectory(glad)
 add_subdirectory(inih)
 
 # mbedtls
-add_subdirectory(mbedtls EXCLUDE_FROM_ALL)
-target_include_directories(mbedtls PUBLIC ./mbedtls/include)
+if(NOT APPLE)
+  find_package(MBEDTLS)
+endif()
+if(MBEDTLS_FOUND)
+  message(STATUS "Using the system mbed TLS")
+  add_library(mbedtls-shared INTERFACE)
+  target_link_libraries(mbedtls-shared INTERFACE "${MBEDTLS_LIBRARIES}")
+  target_include_directories(mbedtls-shared INTERFACE "${MBEDTLS_INCLUDE_DIRS}")
+  add_library(mbedtls ALIAS mbedtls-shared)
+else()
+  add_subdirectory(mbedtls EXCLUDE_FROM_ALL)
+  target_include_directories(mbedtls PUBLIC ./mbedtls/include)
+endif()
 
 # MicroProfile
 add_library(microprofile INTERFACE)
@@ -75,13 +85,27 @@ if (YUZU_USE_EXTERNAL_SDL2)
 endif()
 
 # ENet
+pkg_check_modules(ENET IMPORTED_TARGET libenet)
+if(ENET_FOUND)
+  message(STATUS "Using the system enet")
+  add_library(enet-shared INTERFACE)
+  target_link_libraries(enet-shared INTERFACE PkgConfig::ENET)
+  target_include_directories(enet-shared INTERFACE PkgConfig::ENET)
+  add_library(enet ALIAS enet-shared)
+else()
 add_subdirectory(enet)
 target_include_directories(enet INTERFACE ./enet/include)
+endif()
 
 # Cubeb
 if(ENABLE_CUBEB)
-    set(BUILD_TESTS OFF CACHE BOOL "")
-    add_subdirectory(cubeb EXCLUDE_FROM_ALL)
+    find_package(cubeb)
+    if(cubeb_FOUND)
+      message(STATUS "Using the system cubeb")
+    else()
+      set(BUILD_TESTS OFF CACHE BOOL "")
+      add_subdirectory(cubeb EXCLUDE_FROM_ALL)
+    endif()
 endif()
 
 # DiscordRPC
diff --git a/externals/find-modules/FindMBEDTLS.cmake b/externals/find-modules/FindMBEDTLS.cmake
new file mode 100644
index 0000000..97c4515
--- /dev/null
+++ b/externals/find-modules/FindMBEDTLS.cmake
@@ -0,0 +1,23 @@
+find_path(MBEDTLS_INCLUDE_DIR mbedtls/ssl.h)
+
+find_library(MBEDTLS_LIBRARY mbedtls)
+find_library(MBEDX509_LIBRARY mbedx509)
+find_library(MBEDCRYPTO_LIBRARY mbedcrypto)
+
+set(MBEDTLS_INCLUDE_DIRS ${MBEDTLS_INCLUDE_DIR})
+set(MBEDTLS_LIBRARIES ${MBEDTLS_LIBRARY} ${MBEDX509_LIBRARY} ${MBEDCRYPTO_LIBRARY})
+
+set(CMAKE_REQUIRED_INCLUDES ${MBEDTLS_INCLUDE_DIRS})
+check_cxx_source_compiles("
+	#include <mbedtls/version.h>
+	#if MBEDTLS_VERSION_NUMBER < 0x02040000
+	#error \"Your mbed TLS version is too old.\"
+	#endif
+	int main() {}"
+	MBEDTLS_VERSION_OK)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(MBEDTLS DEFAULT_MSG
+	MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY MBEDTLS_VERSION_OK)
+
+mark_as_advanced(MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY)
-- 
2.37.1

