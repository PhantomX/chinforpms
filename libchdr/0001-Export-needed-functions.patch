From b4018405702469c6db62111ce3601a8cf2d9d0b1 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Thu, 9 Nov 2023 00:25:50 -0300
Subject: [PATCH] Export needed functions

---
 include/libchdr/cdrom.h | 24 +++++++++++++++++++-----
 src/libchdr_cdrom.c     | 10 +++++-----
 src/link.T              |  2 +-
 3 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/include/libchdr/cdrom.h b/include/libchdr/cdrom.h
index dd18e6f..3e63dc5 100644
--- a/include/libchdr/cdrom.h
+++ b/include/libchdr/cdrom.h
@@ -55,8 +55,22 @@ enum
 	CD_SUB_RAW,                 /* raw non-interleaved 96 bytes per sector */
 };
 
-const char* cdrom_get_subtype_string(uint32_t subtype);
-int cdrom_parse_subtype_string(const char* typestring, uint32_t* subtype, uint32_t* subsize);
+#ifdef _MSC_VER
+#ifdef CHD_DLL
+#ifdef CHD_DLL_EXPORTS
+#define CHD_EXPORT __declspec(dllexport)
+#else
+#define CHD_EXPORT __declspec(dllimport)
+#endif
+#else
+#define CHD_EXPORT
+#endif
+#else
+#define CHD_EXPORT __attribute__ ((visibility("default")))
+#endif
+
+CHD_EXPORT const char* cdrom_get_subtype_string(uint32_t subtype);
+CHD_EXPORT int cdrom_parse_subtype_string(const char* typestring, uint32_t* subtype, uint32_t* subsize);
 
 
 #define CD_FLAG_GDROM   0x00000001  /* disc is a GD-ROM, all tracks should be stored with GD-ROM metadata */
@@ -69,10 +83,10 @@ int cdrom_parse_subtype_string(const char* typestring, uint32_t* subtype, uint32
 #ifdef WANT_RAW_DATA_SECTOR
 /* ECC utilities */
 int ecc_verify(const uint8_t *sector);
-void ecc_generate(uint8_t *sector);
+CHD_EXPORT void ecc_generate(uint8_t *sector);
 void ecc_clear(uint8_t *sector);
-uint32_t edc_compute(const uint8_t* data, uint32_t length);
-void edc_set(uint8_t* dst, uint32_t edc);
+CHD_EXPORT uint32_t edc_compute(const uint8_t* data, uint32_t length);
+CHD_EXPORT void edc_set(uint8_t* dst, uint32_t edc);
 #endif
 
 
diff --git a/src/libchdr_cdrom.c b/src/libchdr_cdrom.c
index 7acd539..6445ad3 100644
--- a/src/libchdr_cdrom.c
+++ b/src/libchdr_cdrom.c
@@ -20,7 +20,7 @@
 
 #include <libchdr/cdrom.h>
 
-const char* cdrom_get_subtype_string(uint32_t subtype)
+CHD_EXPORT const char* cdrom_get_subtype_string(uint32_t subtype)
 {
 	switch (subtype)
 	{
@@ -30,7 +30,7 @@ const char* cdrom_get_subtype_string(uint32_t subtype)
 	}
 }
 
-int cdrom_parse_subtype_string(const char* typestring, uint32_t* subtype, uint32_t* subsize)
+CHD_EXPORT int cdrom_parse_subtype_string(const char* typestring, uint32_t* subtype, uint32_t* subsize)
 {
 	// https://github.com/mamedev/mame/blob/d2d54fb8ed53a2e86d308067da8414f85b5929b0/src/lib/util/cdrom.cpp#L767
   if (!strcmp(typestring, "RW"))
@@ -413,7 +413,7 @@ int ecc_verify(const uint8_t *sector)
  * @param [in,out]  sector  If non-null, the sector.
  */
 
-void ecc_generate(uint8_t *sector)
+CHD_EXPORT void ecc_generate(uint8_t *sector)
 {
 	int byte;
 	/* first verify P bytes */
@@ -473,7 +473,7 @@ static const uint32_t edc_table[256] = {
 	0x71c0fc00, 0xe151fd01, 0xe0e1fe01, 0x7070ff00
 };
 
-uint32_t edc_compute(const uint8_t* data, uint32_t length)
+CHD_EXPORT uint32_t edc_compute(const uint8_t* data, uint32_t length)
 {
   uint32_t edc = 0;
   for (uint32_t i = 0; i < length; i++)
@@ -481,7 +481,7 @@ uint32_t edc_compute(const uint8_t* data, uint32_t length)
   return edc;
 }
 
-void edc_set(uint8_t* dst, uint32_t edc)
+CHD_EXPORT void edc_set(uint8_t* dst, uint32_t edc)
 {
   // store in little-endian byte order
   memcpy(dst, &edc, sizeof(edc));
diff --git a/src/link.T b/src/link.T
index ea37716..482dfb8 100644
--- a/src/link.T
+++ b/src/link.T
@@ -1,5 +1,5 @@
 {
-   global: chd_*;
+   global: chd_*; cdrom_*; ecc_*; edc_*;
    local: *;
 };
 
-- 
2.47.0

