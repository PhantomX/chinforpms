Index: VirtualBox-5.1.28/src/VBox/HostDrivers/VBoxPci/linux/VBoxPci-linux.c
===================================================================
--- ./VirtualBox-kmod-5.1.28/vboxpci/linux/VBoxPci-linux.c.orig
+++ ./VirtualBox-kmod-5.1.28/vboxpci/linux/VBoxPci-linux.c
@@ -353,12 +353,17 @@ static void  vboxPciFileClose(struct fil
 static int vboxPciFileWrite(struct file* file, unsigned long long offset, unsigned char* data, unsigned int size)
 {
     int          ret;
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
+
+    ret = kernel_write(file, data, size, &offset);
+#else
     mm_segment_t fs_save;
 
     fs_save = get_fs();
     set_fs(get_ds());
     ret = vfs_write(file, data, size, &offset);
     set_fs(fs_save);
+#endif
     if (ret < 0)
         printk(KERN_DEBUG "vboxPciFileWrite: error %d\n", ret);
 
Index: VirtualBox-5.1.28/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c
===================================================================
--- ./VirtualBox-kmod-5.1.28/vboxnetflt/linux/VBoxNetFlt-linux.c
+++ ./VirtualBox-kmod-5.1.28/vboxnetflt/linux/VBoxNetFlt-linux.c
@@ -124,6 +124,10 @@ typedef struct VBOXNETFLTNOTIFIER *PVBOX
 #  define bstats stats
 #  define qstats stats
 # endif
+#endif 
+
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
+#define SKB_GSO_UDP	0
 #endif
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 20, 0)
@@ -722,9 +726,11 @@ static struct sk_buff *vboxNetFltLinuxSk
         case PDMNETWORKGSOTYPE_IPV4_TCP:
             fGsoType = SKB_GSO_TCPV4;
             break;
+# if LINUX_VERSION_CODE < KERNEL_VERSION(4, 14, 0)
         case PDMNETWORKGSOTYPE_IPV4_UDP:
             fGsoType = SKB_GSO_UDP;
             break;
+#endif
         case PDMNETWORKGSOTYPE_IPV6_TCP:
             fGsoType = SKB_GSO_TCPV6;
             break;
Index: VirtualBox-kmod-5.2.0/vboxvideo/vbox_drv.c
===================================================================
--- ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_drv.c.orig
+++ ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_drv.c
@@ -267,7 +267,9 @@ static struct drm_driver driver = {
 	.master_set = vbox_master_set,
 	.master_drop = vbox_master_drop,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 18, 0) || defined(RHEL_73)
+# if LINUX_VERSION_CODE < KERNEL_VERSION(4, 14, 0)
 	.set_busid = drm_pci_set_busid,
+# endif
 #endif
 
 	.fops = &vbox_fops,
@@ -302,7 +304,7 @@ static struct drm_driver driver = {
 
 static int __init vbox_init(void)
 {
-#ifdef CONFIG_VGA_CONSOLE
+#if defined(CONFIG_VGA_CONSOLE) || LINUX_VERSION_CODE >= KERNEL_VERSION(4, 7, 0)
 	if (vgacon_text_force() && vbox_modeset == -1)
 		return -EINVAL;
 #endif
@@ -310,12 +312,12 @@ static int __init vbox_init(void)
 	if (vbox_modeset == 0)
 		return -EINVAL;
 
-	return drm_pci_init(&driver, &vbox_pci_driver);
+	return pci_register_driver(&vbox_pci_driver);;
 }
 
 static void __exit vbox_exit(void)
 {
-	drm_pci_exit(&driver, &vbox_pci_driver);
+	pci_unregister_driver(&vbox_pci_driver);
 }
 
 module_init(vbox_init);
Index: VirtualBox-kmod-5.2.0/vboxvideo/vbox_fb.c
===================================================================
--- ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_fb.c.orig
+++ ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_fb.c
@@ -333,22 +333,7 @@ static int vboxfb_create(struct drm_fb_h
 	return 0;
 }
 
-static void vbox_fb_gamma_set(struct drm_crtc *crtc, u16 red, u16 green,
-			      u16 blue, int regno)
-{
-}
-
-static void vbox_fb_gamma_get(struct drm_crtc *crtc, u16 *red, u16 *green,
-			      u16 *blue, int regno)
-{
-	*red = regno;
-	*green = regno;
-	*blue = regno;
-}
-
 static struct drm_fb_helper_funcs vbox_fb_helper_funcs = {
-	.gamma_set = vbox_fb_gamma_set,
-	.gamma_get = vbox_fb_gamma_get,
 	.fb_probe = vboxfb_create,
 };
 
Index: VirtualBox-kmod-5.2.0/vboxvideo/vbox_mode.c
===================================================================
diff -up ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_mode.c.orig ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_mode.c
--- ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_mode.c.orig
+++ ./VirtualBox-kmod-5.2.0/vboxvideo/vbox_mode.c
@@ -146,10 +146,6 @@ static int vbox_set_view(struct drm_crtc
 	return 0;
 }
 
-static void vbox_crtc_load_lut(struct drm_crtc *crtc)
-{
-}
-
 static void vbox_crtc_dpms(struct drm_crtc *crtc, int mode)
 {
 	struct vbox_crtc *vbox_crtc = to_vbox_crtc(crtc);
@@ -343,7 +339,6 @@ static const struct drm_crtc_helper_func
 	.mode_set = vbox_crtc_mode_set,
 	/* .mode_set_base = vbox_crtc_mode_set_base, */
 	.disable = vbox_crtc_disable,
-	.load_lut = vbox_crtc_load_lut,
 	.prepare = vbox_crtc_prepare,
 	.commit = vbox_crtc_commit,
 };
