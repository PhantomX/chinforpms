From e883780d9038f5bf6f55243a93094920762c9331 Mon Sep 17 00:00:00 2001
From: jason <jason@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Sat, 15 Mar 2003 17:06:24 +0000
Subject: [PATCH]         PR debug/6387         * dwarf2out.c (dwarf2out_decl):
 If we're at -g1, just stick nested         function DIEs at toplevel.        
 (decls_for_scope): At -g1, don't descend into subblocks.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@64410 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/dwarf2out.c | 8 +++++++-
 2 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/gcc/dwarf2out.c b/gcc/dwarf2out.c
index 6a15a3b13f84..e31fcb878d38 100644
--- a/gcc/dwarf2out.c
+++ b/gcc/dwarf2out.c
@@ -12018,6 +12018,10 @@ decls_for_scope (stmt, context_die, depth)
 	gen_decl_die (decl, context_die);
     }
 
+  /* If we're at -g1, we're not interested in subblocks.  */
+  if (debug_info_level <= DINFO_LEVEL_TERSE)
+    return;
+
   /* Output the DIEs to represent all sub-blocks (and the items declared
      therein) of this block.  */
   for (subblocks = BLOCK_SUBBLOCKS (stmt);
@@ -12286,7 +12290,9 @@ dwarf2out_decl (decl)
       /* If we're a nested function, initially use a parent of NULL; if we're
 	 a plain function, this will be fixed up in decls_for_scope.  If
 	 we're a method, it will be ignored, since we already have a DIE.  */
-      if (decl_function_context (decl))
+      if (decl_function_context (decl)
+	  /* But if we're in terse mode, we don't care about scope.  */
+	  && debug_info_level > DINFO_LEVEL_TERSE)
 	context_die = NULL;
       break;
 
