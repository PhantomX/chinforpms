From b859ea9290d8ab2672911d61b2a3e76983757561 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Tue, 9 Sep 2025 18:48:43 -0300
Subject: [PATCH] Use system libraries

---
 CMakeLists.txt                         | 30 +++++++++-----
 externals/CMakeLists.txt               | 57 ++++++++++++++++++++++++++
 externals/ffmpeg/CMakeLists.txt        |  5 +++
 externals/nx_tzdb/CMakeLists.txt       |  2 +-
 src/dynarmic/CMakeLists.txt            |  6 +--
 src/dynarmic/externals/CMakeLists.txt  | 20 +++++++++
 src/qt_common/externals/CMakeLists.txt | 13 ++++++
 7 files changed, 118 insertions(+), 15 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b61bb49..ca4a3ac 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -148,7 +148,6 @@ endif()
 
 set(CPM_SOURCE_CACHE ${CMAKE_SOURCE_DIR}/.cache/cpm)
 
-include(DownloadExternals)
 include(CMakeDependentOption)
 include(CTest)
 
@@ -516,7 +515,7 @@ if (YUZU_USE_CPM)
     endif()
 else()
     # Enforce the search mode of non-required packages for better and shorter failure messages
-    find_package(fmt 8 REQUIRED)
+    find_package(fmt 8)
 
     if (NOT YUZU_DISABLE_LLVM)
         find_package(LLVM MODULE COMPONENTS Demangle)
@@ -548,7 +547,11 @@ else()
 endif()
 
 if(NOT TARGET Boost::headers)
+  if (YUZU_USE_CPM)
     AddJsonPackage(boost_headers)
+  else()
+    add_subdirectory(externals/boost-headers)
+  endif()
 endif()
 
 # List of all FFmpeg components required
@@ -584,21 +587,26 @@ find_package(VulkanMemoryAllocator)
 find_package(enet)
 find_package(MbedTLS)
 find_package(VulkanUtilityLibraries)
-find_package(SimpleIni)
 find_package(SPIRV-Tools)
 find_package(sirit)
+find_package(VulkanHeaders 1.3.274 REQUIRED)
 
-if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
-    find_package(xbyak)
+if(fmt_FOUND)
+    message(STATUS "Using the system fmt")
+else()
+    add_subdirectory("externals/fmt" EXCLUDE_FROM_ALL)
 endif()
 
-if (ENABLE_WEB_SERVICE OR ENABLE_QT_UPDATE_CHECKER)
-    # Workaround: httplib will kill itself if you attempt to do a find_package propagation
-    # find_package(httplib CONFIG)
+if (NOT YUZU_USE_CPM)
+if(MbedTLS_FOUND)
+    message(STATUS "Using the system mbed TLS")
+else()
+    set(ENABLE_PROGRAMS OFF)
+    set(DISABLE_PACKAGE_CONFIG_AND_INSTALL ON)
+    set(mbedtls_SOURCE_DIR ${PROJECT_SOURCE_DIR}/externals/mbedtls)
+    add_subdirectory(externals/mbedtls)
+    set(mbedtls_ADDED ON)
 endif()
-
-if (ENABLE_WEB_SERVICE)
-    find_package(cpp-jwt)
 endif()
 
 if (ARCHITECTURE_arm64 OR DYNARMIC_TESTS)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index 2da461f..56fe896 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -27,11 +27,18 @@ set_directory_properties(PROPERTIES EXCLUDE_FROM_ALL ON)
 
 # Xbyak (also used by Dynarmic, so needs to be added first)
 if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
+  if (YUZU_USE_CPM)
     if (PLATFORM_SUN OR PLATFORM_OPENBSD)
         AddJsonPackage(xbyak_sun)
     else()
         AddJsonPackage(xbyak)
     endif()
+  else()
+    find_package(xbyak 7 CONFIG GLOBAL)
+    if (NOT TARGET xbyak::xbyak)
+      add_subdirectory(xbyak)
+    endif()
+  endif()
 endif()
 
 # Oaknut (also used by Dynarmic, so needs to be added first)
@@ -40,6 +47,7 @@ if (ARCHITECTURE_arm64 OR DYNARMIC_TESTS)
 endif()
 
 # enet
+if (YUZU_USE_CPM)
 AddJsonPackage(enet)
 
 if (enet_ADDED)
@@ -49,12 +57,17 @@ endif()
 if (NOT TARGET enet::enet)
     add_library(enet::enet ALIAS enet)
 endif()
+endif()
 
 # mbedtls
+if (YUZU_USE_CPM)
 AddJsonPackage(mbedtls)
+endif()
 
 # VulkanUtilityHeaders - pulls in headers and utility libs
+if (YUZU_USE_CPM)
 AddJsonPackage(vulkan-utility-headers)
+endif()
 
 # small hack
 if (NOT VulkanUtilityLibraries_ADDED)
@@ -76,10 +89,15 @@ if (USE_DISCORD_PRESENCE)
 endif()
 
 # SimpleIni
+if (YUZU_USE_CPM)
 AddJsonPackage(simpleini)
+else()
+  add_subdirectory(simpleini)
+endif()
 
 # Most linux distros don't package cubeb, so enable regardless of cpm settings
 if(ENABLE_CUBEB)
+  if (YUZU_USE_CPM)
     AddJsonPackage(cubeb)
 
     if (cubeb_ADDED)
@@ -108,6 +126,7 @@ if(ENABLE_CUBEB)
         add_library(cubeb::cubeb ALIAS cubeb)
     endif()
 endif()
+endif()
 
 # find SDL2 exports a bunch of variables that are needed, so its easier to do this outside of the YUZU_find_package
 if (ENABLE_SDL2)
@@ -148,9 +167,14 @@ if (ENABLE_SDL2)
 endif()
 
 # SPIRV Headers
+if (YUZU_USE_CPM)
 AddJsonPackage(spirv-headers)
+else()
+find_package(SPIRV-Headers 1.3.274 REQUIRED)
+endif()
 
 # Sirit
+if (YUZU_USE_CPM)
 if (YUZU_USE_BUNDLED_SIRIT)
     AddJsonPackage(sirit-ci)
 else()
@@ -166,9 +190,12 @@ else()
         target_compile_options(siritobj PRIVATE -Wno-error=unused-command-line-argument)
     endif()
 endif()
+endif()
 
 # SPIRV Tools
+if (YUZU_USE_CPM)
 AddJsonPackage(spirv-tools)
+endif()
 
 if (SPIRV-Tools_ADDED)
     add_library(SPIRV-Tools::SPIRV-Tools ALIAS SPIRV-Tools-static)
@@ -176,9 +203,11 @@ if (SPIRV-Tools_ADDED)
 endif()
 
 # Catch2
+if (YUZU_USE_CPM)
 if (YUZU_TESTS OR DYNARMIC_TESTS)
     AddJsonPackage(catch2)
 endif()
+endif()
 
 # getopt
 if (MSVC)
@@ -189,12 +218,16 @@ endif()
 add_subdirectory(glad)
 
 # libusb
+if (YUZU_USE_CPM)
 if (ENABLE_LIBUSB)
     add_subdirectory(libusb)
 endif()
+endif()
 
 # VMA
+if (YUZU_USE_CPM)
 AddJsonPackage(vulkan-memory-allocator)
+endif()
 
 if (VulkanMemoryAllocator_ADDED)
     if (CXX_CLANG)
@@ -210,16 +243,40 @@ endif()
 
 # httplib
 if (ENABLE_WEB_SERVICE OR ENABLE_QT_UPDATE_CHECKER)
+  if (YUZU_USE_CPM)
     AddJsonPackage(httplib)
+  else()
+    if (NOT TARGET httplib::httplib)
+      set(HTTPLIB_REQUIRE_OPENSSL ${ENABLE_OPENSSL})
+      add_subdirectory(cpp-httplib)
+    endif()
+  endif()
 endif()
 
 # cpp-jwt
 if (ENABLE_WEB_SERVICE)
+  if (YUZU_USE_CPM)
     AddJsonPackage(cpp-jwt)
+  else()
+    if (NOT TARGET cpp-jwt::cpp-jwt)
+      set(CPP_JWT_BUILD_EXAMPLES OFF)
+      set(CPP_JWT_BUILD_TESTS OFF)
+      set(CPP_JWT_USE_VENDORED_NLOHMANN_JSON OFF)
+      add_subdirectory(cpp-jwt)
+    endif()
+  endif()
 endif()
 
 # unordered_dense
+if (YUZU_USE_CPM)
 AddJsonPackage(unordered-dense)
+else()
+  find_package(unordered_dense CONFIG)
+  if (NOT TARGET ankerl::unordered_dense)
+      set(UNORDERED_DENSE_INSTALL OFF)
+      add_subdirectory(unordered-dense)
+  endif()
+endif()
 
 # FFMpeg
 if (YUZU_USE_EXTERNAL_FFMPEG OR YUZU_USE_BUNDLED_FFMPEG)
diff --git a/externals/ffmpeg/CMakeLists.txt b/externals/ffmpeg/CMakeLists.txt
index 59397f6..89ff9c0 100644
--- a/externals/ffmpeg/CMakeLists.txt
+++ b/externals/ffmpeg/CMakeLists.txt
@@ -155,10 +155,15 @@ else()
         message(FATAL_ERROR "Required program `autoconf` not found.")
     endif()
 
+  if (YUZU_USE_CPM)
     AddJsonPackage(ffmpeg)
 
     set(FFmpeg_PREFIX ${ffmpeg_SOURCE_DIR})
     set(FFmpeg_BUILD_DIR ${ffmpeg_BINARY_DIR})
+    else()
+      set(FFmpeg_PREFIX ${PROJECT_SOURCE_DIR}/externals/ffmpeg/ffmpeg)
+      set(FFmpeg_BUILD_DIR ${PROJECT_BINARY_DIR}/externals/ffmpeg-build)
+    endif()
     set(FFmpeg_MAKEFILE ${FFmpeg_BUILD_DIR}/Makefile)
     make_directory(${FFmpeg_BUILD_DIR})
 
diff --git a/externals/nx_tzdb/CMakeLists.txt b/externals/nx_tzdb/CMakeLists.txt
index efb3e2b..ffa1109 100644
--- a/externals/nx_tzdb/CMakeLists.txt
+++ b/externals/nx_tzdb/CMakeLists.txt
@@ -58,7 +58,7 @@ elseif (MSVC AND NOT CXX_CLANG AND YUZU_ENABLE_LTO)
             ${NX_TZDB_ARCHIVE}
         DESTINATION
             ${NX_TZDB_BASE_DIR})
-else()
+elseif (CAN_BUILD_NX_TZDB AND YUZU_DOWNLOAD_TIME_ZONE_DATA)
     message(STATUS "Downloading time zone data...")
     AddJsonPackage(tzdb)
 
diff --git a/src/dynarmic/CMakeLists.txt b/src/dynarmic/CMakeLists.txt
index e5345ef..81e35ca 100644
--- a/src/dynarmic/CMakeLists.txt
+++ b/src/dynarmic/CMakeLists.txt
@@ -149,7 +149,7 @@ find_package(fmt 9 CONFIG)
 # Pull in externals CMakeLists for libs where available
 add_subdirectory(externals)
 
-find_package(mcl 0.1.12 REQUIRED)
+find_package(mcl 0.1.12)
 
 if ("arm64" IN_LIST ARCHITECTURE OR DYNARMIC_TESTS)
     find_package(oaknut 2.0.1 CONFIG)
@@ -161,8 +161,8 @@ endif()
 
 if ("x86_64" IN_LIST ARCHITECTURE)
     find_package(xbyak 7 CONFIG)
-    find_package(zycore REQUIRED)
-    find_package(zydis 4 REQUIRED)
+    find_package(zycore)
+    find_package(zydis 4)
 endif()
 
 if (DYNARMIC_USE_LLVM)
diff --git a/src/dynarmic/externals/CMakeLists.txt b/src/dynarmic/externals/CMakeLists.txt
index ea666dd..e727d08 100644
--- a/src/dynarmic/externals/CMakeLists.txt
+++ b/src/dynarmic/externals/CMakeLists.txt
@@ -28,14 +28,22 @@ if ("riscv" IN_LIST ARCHITECTURE)
 endif()
 
 # mcl
+if (YUZU_USE_CPM)
 AddJsonPackage(
     NAME mcl
     BUNDLED_PACKAGE ${DYNARMIC_USE_BUNDLED_EXTERNALS}
 )
+else()
+  if (NOT TARGET merry::mcl)
+      set(MCL_INSTALL OFF)
+      add_subdirectory(mcl)
+  endif()
+endif()
 
 # TODO(crueter): maybe it's just Gentoo but zydis system package really sucks
 if ("x86_64" IN_LIST ARCHITECTURE)
     set(CMAKE_DISABLE_FIND_PACKAGE_Doxygen ON)
+  if (YUZU_USE_CPM)
     AddJsonPackage(
         NAME zycore
         BUNDLED_PACKAGE ${DYNARMIC_USE_BUNDLED_EXTERNALS}
@@ -45,4 +53,16 @@ if ("x86_64" IN_LIST ARCHITECTURE)
         NAME zydis
         BUNDLED_PACKAGE ${DYNARMIC_USE_BUNDLED_EXTERNALS}
     )
+  else()
+    if (NOT TARGET Zydis::Zydis)
+        set(ZYDIS_BUILD_TOOLS OFF)
+        set(ZYDIS_BUILD_EXAMPLES OFF)
+        set(ZYDIS_BUILD_DOXYGEN OFF)
+        set(ZYAN_ZYCORE_PATH "${CMAKE_CURRENT_LIST_DIR}/zycore-c" CACHE PATH "")
+        set(CMAKE_DISABLE_FIND_PACKAGE_Doxygen ON)
+        if (NOT TARGET Zydis)
+            add_subdirectory(zydis)
+        endif()
+    endif()
+  endif()
 endif()
diff --git a/src/qt_common/externals/CMakeLists.txt b/src/qt_common/externals/CMakeLists.txt
index b998090..b98b14f 100644
--- a/src/qt_common/externals/CMakeLists.txt
+++ b/src/qt_common/externals/CMakeLists.txt
@@ -13,7 +13,20 @@ set(BUILD_SHARED_LIBS OFF)
 set_directory_properties(PROPERTIES EXCLUDE_FROM_ALL ON)
 
 # QuaZip
+if (YUZU_USE_CPM)
 AddJsonPackage(quazip)
+else()
+  find_package(PkgConfig REQUIRED)
+  pkg_check_modules(quazip IMPORTED_TARGET quazip1-qt6)
+  if (TARGET PkgConfig::quazip)
+    message(STATUS "Using the system Quazip")
+    add_library(quazip INTERFACE)
+    target_link_libraries(quazip INTERFACE PkgConfig::quazip)
+    add_library(QuaZip::QuaZip ALIAS quazip)
+  endif()
+endif()
 
 # frozen
+if (YUZU_USE_CPM)
 AddJsonPackage(frozen)
+endif()
-- 
2.51.0

