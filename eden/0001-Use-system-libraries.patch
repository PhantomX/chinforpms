From c915e1f8af21abc7f05a8681a388006a4e7e465b Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Tue, 9 Sep 2025 18:48:43 -0300
Subject: [PATCH] Use system libraries

---
 CMakeLists.txt                         | 35 ++++++++++++++++++++--
 externals/CMakeLists.txt               | 40 ++++++++++++++++++++++++++
 externals/ffmpeg/CMakeLists.txt        |  5 ++++
 externals/nx_tzdb/CMakeLists.txt       |  2 +-
 src/dynarmic/CMakeLists.txt            |  6 ++--
 src/dynarmic/externals/CMakeLists.txt  | 20 +++++++++++++
 src/qt_common/externals/CMakeLists.txt | 15 ++++++++++
 7 files changed, 116 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 673aab9..e4c0a91 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -124,7 +124,6 @@ endif()
 
 set(CPM_SOURCE_CACHE ${CMAKE_SOURCE_DIR}/.cache/cpm)
 
-include(DownloadExternals)
 include(CMakeDependentOption)
 include(CTest)
 
@@ -460,7 +459,9 @@ if (YUZU_USE_CPM)
     endif()
 
     # VulkanUtilityHeaders - pulls in headers and utility libs
+    if (YUZU_USE_CPM)
     AddJsonPackage(vulkan-utility-headers)
+    endif()
 
     # small hack
     if (NOT VulkanUtilityLibraries_ADDED)
@@ -482,7 +483,7 @@ if (YUZU_USE_CPM)
     AddJsonPackage(mbedtls)
 else()
     # Enforce the search mode of non-required packages for better and shorter failure messages
-    find_package(fmt 8 REQUIRED)
+    find_package(fmt 8)
     find_package(LLVM MODULE COMPONENTS Demangle)
     find_package(nlohmann_json 3.8 REQUIRED)
     find_package(lz4 REQUIRED)
@@ -504,9 +505,19 @@ else()
     if (PLATFORM_OPENBSD)
         AddJsonPackage(mbedtls)
     else()
-        find_package(MbedTLS 3 REQUIRED)
+        find_package(MbedTLS 3)
+        if(MbedTLS_FOUND)
+            message(STATUS "Using the system mbed TLS")
+        else()
+            set(ENABLE_PROGRAMS OFF)
+            set(DISABLE_PACKAGE_CONFIG_AND_INSTALL ON)
+            set(mbedtls_SOURCE_DIR ${PROJECT_SOURCE_DIR}/externals/mbedtls)
+            add_subdirectory(externals/mbedtls)
+            set(mbedtls_ADDED ON)
+        endif()
     endif()
 
+
     find_package(VulkanUtilityLibraries REQUIRED)
     find_package(VulkanHeaders 1.3.274 REQUIRED)
 
@@ -519,6 +530,12 @@ else()
 
     find_package(SPIRV-Tools MODULE REQUIRED)
 
+    if(fmt_FOUND)
+        message(STATUS "Using the system fmt")
+    else()
+        add_subdirectory("externals/fmt" EXCLUDE_FROM_ALL)
+    endif()
+
     if (YUZU_TESTS)
         find_package(Catch2 3.0.1 REQUIRED)
     endif()
@@ -533,7 +550,11 @@ else()
 endif()
 
 if(NOT TARGET Boost::headers)
+  if (YUZU_USE_CPM)
     AddJsonPackage(boost_headers)
+  else()
+    add_subdirectory(externals/boost-headers)
+  endif()
 endif()
 
 # DiscordRPC
@@ -549,10 +570,15 @@ if (USE_DISCORD_PRESENCE)
 endif()
 
 # SimpleIni
+if (YUZU_USE_CPM)
 AddJsonPackage(simpleini)
+else()
+    add_subdirectory(externals/simpleini)
+endif()
 
 # Most linux distros don't package cubeb, so enable regardless of cpm settings
 if(ENABLE_CUBEB)
+  if (YUZU_USE_CPM)
     AddJsonPackage(cubeb)
 
     if (cubeb_ADDED)
@@ -576,6 +602,9 @@ if(ENABLE_CUBEB)
             )
         endif()
     endif()
+  else()
+    find_package(cubeb CONFIG)
+  endif()
 endif()
 
 # find SDL2 exports a bunch of variables that are needed, so its easier to do this outside of the YUZU_find_package
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index aba5451..99556fb 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -34,11 +34,18 @@ endif()
 
 # Xbyak (also used by Dynarmic, so needs to be added first)
 if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
+  if (YUZU_USE_CPM)
     if (PLATFORM_SUN OR PLATFORM_OPENBSD)
         AddJsonPackage(xbyak_sun)
     else()
         AddJsonPackage(xbyak)
     endif()
+  else()
+    find_package(xbyak 7 CONFIG GLOBAL)
+    if (NOT TARGET xbyak::xbyak)
+      add_subdirectory(xbyak)
+    endif()
+  endif()
 endif()
 
 # Oaknut (also used by Dynarmic, so needs to be added first)
@@ -55,12 +62,16 @@ endif()
 add_subdirectory(glad)
 
 # libusb
+if (YUZU_USE_CPM)
 if (ENABLE_LIBUSB)
     add_subdirectory(libusb)
 endif()
+endif()
 
 # VMA
+if (YUZU_USE_CPM)
 AddJsonPackage(vulkan-memory-allocator)
+endif()
 
 if (VulkanMemoryAllocator_ADDED)
     if (CXX_CLANG)
@@ -75,7 +86,12 @@ if (VulkanMemoryAllocator_ADDED)
 endif()
 
 # Sirit
+if (YUZU_USE_CPM)
 AddJsonPackage(sirit)
+else()
+  set(SIRIT_USE_SYSTEM_SPIRV_HEADERS ON)
+  add_subdirectory(sirit)
+endif()
 
 if(MSVC AND USE_CCACHE AND sirit_ADDED)
     get_target_property(_opts sirit COMPILE_OPTIONS)
@@ -88,16 +104,40 @@ endif()
 
 # httplib
 if (ENABLE_WEB_SERVICE OR ENABLE_QT_UPDATE_CHECKER)
+  if (YUZU_USE_CPM)
     AddJsonPackage(httplib)
+  else()
+    if (NOT TARGET httplib::httplib)
+      set(HTTPLIB_REQUIRE_OPENSSL ${ENABLE_OPENSSL})
+      add_subdirectory(cpp-httplib)
+    endif()
+  endif()
 endif()
 
 # cpp-jwt
 if (ENABLE_WEB_SERVICE)
+  if (YUZU_USE_CPM)
     AddJsonPackage(cpp-jwt)
+  else()
+    if (NOT TARGET cpp-jwt::cpp-jwt)
+      set(CPP_JWT_BUILD_EXAMPLES OFF)
+      set(CPP_JWT_BUILD_TESTS OFF)
+      set(CPP_JWT_USE_VENDORED_NLOHMANN_JSON OFF)
+      add_subdirectory(cpp-jwt)
+    endif()
+  endif()
 endif()
 
 # unordered_dense
+if (YUZU_USE_CPM)
 AddJsonPackage(unordered-dense)
+else()
+  find_package(unordered_dense CONFIG)
+  if (NOT TARGET ankerl::unordered_dense)
+      set(UNORDERED_DENSE_INSTALL OFF)
+      add_subdirectory(unordered-dense)
+  endif()
+endif()
 
 # FFMpeg
 if (YUZU_USE_BUNDLED_FFMPEG)
diff --git a/externals/ffmpeg/CMakeLists.txt b/externals/ffmpeg/CMakeLists.txt
index 8908aa2..7064abc 100644
--- a/externals/ffmpeg/CMakeLists.txt
+++ b/externals/ffmpeg/CMakeLists.txt
@@ -21,10 +21,15 @@ if (NOT WIN32 AND NOT ANDROID)
         message(FATAL_ERROR "Required program `autoconf` not found.")
     endif()
 
+  if (YUZU_USE_CPM)
     AddJsonPackage(ffmpeg)
 
     set(FFmpeg_PREFIX ${ffmpeg_SOURCE_DIR})
     set(FFmpeg_BUILD_DIR ${ffmpeg_BINARY_DIR})
+    else()
+      set(FFmpeg_PREFIX ${PROJECT_SOURCE_DIR}/externals/ffmpeg/ffmpeg)
+      set(FFmpeg_BUILD_DIR ${PROJECT_BINARY_DIR}/externals/ffmpeg-build)
+    endif()
     set(FFmpeg_MAKEFILE ${FFmpeg_BUILD_DIR}/Makefile)
     make_directory(${FFmpeg_BUILD_DIR})
 
diff --git a/externals/nx_tzdb/CMakeLists.txt b/externals/nx_tzdb/CMakeLists.txt
index a08c80f..aea8930 100644
--- a/externals/nx_tzdb/CMakeLists.txt
+++ b/externals/nx_tzdb/CMakeLists.txt
@@ -61,7 +61,7 @@ elseif (MSVC)
             ${NX_TZDB_ARCHIVE}
         DESTINATION
             ${NX_TZDB_BASE_DIR})
-else()
+elseif (CAN_BUILD_NX_TZDB AND YUZU_DOWNLOAD_TIME_ZONE_DATA)
     message(STATUS "Downloading time zone data...")
     AddJsonPackage(tzdb)
 
diff --git a/src/dynarmic/CMakeLists.txt b/src/dynarmic/CMakeLists.txt
index 38457de..21a0d82 100644
--- a/src/dynarmic/CMakeLists.txt
+++ b/src/dynarmic/CMakeLists.txt
@@ -156,7 +156,7 @@ find_package(fmt 9 CONFIG)
 # Pull in externals CMakeLists for libs where available
 add_subdirectory(externals)
 
-find_package(mcl 0.1.12 REQUIRED)
+find_package(mcl 0.1.12)
 
 if ("arm64" IN_LIST ARCHITECTURE OR DYNARMIC_TESTS)
     find_package(oaknut 2.0.1 CONFIG)
@@ -168,8 +168,8 @@ endif()
 
 if ("x86_64" IN_LIST ARCHITECTURE)
     find_package(xbyak 7 CONFIG)
-    find_package(zycore REQUIRED)
-    find_package(zydis 4 REQUIRED)
+    find_package(zycore)
+    find_package(zydis 4)
 endif()
 
 if (DYNARMIC_USE_LLVM)
diff --git a/src/dynarmic/externals/CMakeLists.txt b/src/dynarmic/externals/CMakeLists.txt
index ea666dd..e727d08 100644
--- a/src/dynarmic/externals/CMakeLists.txt
+++ b/src/dynarmic/externals/CMakeLists.txt
@@ -28,14 +28,22 @@ if ("riscv" IN_LIST ARCHITECTURE)
 endif()
 
 # mcl
+if (YUZU_USE_CPM)
 AddJsonPackage(
     NAME mcl
     BUNDLED_PACKAGE ${DYNARMIC_USE_BUNDLED_EXTERNALS}
 )
+else()
+  if (NOT TARGET merry::mcl)
+      set(MCL_INSTALL OFF)
+      add_subdirectory(mcl)
+  endif()
+endif()
 
 # TODO(crueter): maybe it's just Gentoo but zydis system package really sucks
 if ("x86_64" IN_LIST ARCHITECTURE)
     set(CMAKE_DISABLE_FIND_PACKAGE_Doxygen ON)
+  if (YUZU_USE_CPM)
     AddJsonPackage(
         NAME zycore
         BUNDLED_PACKAGE ${DYNARMIC_USE_BUNDLED_EXTERNALS}
@@ -45,4 +53,16 @@ if ("x86_64" IN_LIST ARCHITECTURE)
         NAME zydis
         BUNDLED_PACKAGE ${DYNARMIC_USE_BUNDLED_EXTERNALS}
     )
+  else()
+    if (NOT TARGET Zydis::Zydis)
+        set(ZYDIS_BUILD_TOOLS OFF)
+        set(ZYDIS_BUILD_EXAMPLES OFF)
+        set(ZYDIS_BUILD_DOXYGEN OFF)
+        set(ZYAN_ZYCORE_PATH "${CMAKE_CURRENT_LIST_DIR}/zycore-c" CACHE PATH "")
+        set(CMAKE_DISABLE_FIND_PACKAGE_Doxygen ON)
+        if (NOT TARGET Zydis)
+            add_subdirectory(zydis)
+        endif()
+    endif()
+  endif()
 endif()
diff --git a/src/qt_common/externals/CMakeLists.txt b/src/qt_common/externals/CMakeLists.txt
index 189a52c..4576a9f 100644
--- a/src/qt_common/externals/CMakeLists.txt
+++ b/src/qt_common/externals/CMakeLists.txt
@@ -13,8 +13,23 @@ set(BUILD_SHARED_LIBS OFF)
 set_directory_properties(PROPERTIES EXCLUDE_FROM_ALL ON)
 
 # QuaZip
+if (YUZU_USE_CPM)
 AddJsonPackage(quazip)
+else()
+  find_package(PkgConfig REQUIRED)
+  pkg_check_modules(quazip IMPORTED_TARGET quazip1-qt6)
+  if (TARGET PkgConfig::quazip)
+    message(STATUS "Using the system Quazip")
+    add_library(quazip INTERFACE)
+    target_link_libraries(quazip INTERFACE PkgConfig::quazip)
+    add_library(QuaZip::QuaZip ALIAS quazip)
+  endif()
+endif()
 
 # frozen
 # TODO(crueter): Qt String Lookup
+if (YUZU_USE_CPM)
 AddJsonPackage(frozen)
+else()
+  add_subdirectory(frozen)
+endif()
-- 
2.51.0

