From b4b5d3291175691b64f6a93ebf3c79327db541a2 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Wed, 14 Dec 2022 00:11:38 -0300
Subject: [PATCH] Search gettext files in system-wide directory

---
 mcomix/i18n.py | 32 ++++++++++++++++++++++----------
 1 file changed, 22 insertions(+), 10 deletions(-)

diff --git a/mcomix/i18n.py b/mcomix/i18n.py
index c3a915f..176c48c 100644
--- a/mcomix/i18n.py
+++ b/mcomix/i18n.py
@@ -6,6 +6,7 @@ import locale
 import os
 import pkgutil
 import sys
+import sysconfig
 
 try:
     import chardet
@@ -71,16 +72,27 @@ def install_gettext(force_lang=None):
     # Initialize default locale
     locale.setlocale(locale.LC_ALL, '')
 
+    lang_identifiers = []
     if force_lang is not None:
         lang = force_lang
-        lang_identifiers = [lang]
+        if lang not in ('en', 'en_US'):
+            # .mo is not needed for english
+            lang_identifiers.append(lang)
     elif preferences.prefs['language'] != 'auto':
         lang = preferences.prefs['language']
-        lang_identifiers = [ lang ]
+        if lang not in ('en', 'en_US'):
+            # .mo is not needed for english
+            lang_identifiers.append(lang)
     else:
         # Get the user's current locale
         lang = portability.get_default_locale()
-        lang_identifiers = gettext._expand_lang(lang)
+        for s in gettext._expand_lang(lang):
+            lang = s.split('.')[0]
+            if lang in ('en', 'en_US'):
+                # .mo is not needed for english
+                continue
+            if lang not in lang_identifiers:
+                lang_identifiers.append(lang)
 
     # Make sure GTK uses the correct language.
     os.environ['LANGUAGE'] = lang
@@ -89,15 +101,15 @@ def install_gettext(force_lang=None):
 
     # Search for .mo files manually, since gettext doesn't support packaged resources
     for lang in lang_identifiers:
-        resource = os.path.join('messages', lang, 'LC_MESSAGES', '%s.mo' % domain)
+        resource = os.path.join(sysconfig.get_config_var('datarootdir'),
+                                'locale', lang, 'LC_MESSAGES', '%s.mo' % domain)
         try:
-            translation_content = pkgutil.get_data('mcomix', resource)
-        except FileNotFoundError:
-            pass
-        else:
-            fp = io.BytesIO(translation_content)
-            translation = gettext.GNUTranslations(fp)
+            with open(resource, mode = 'rb') as fp:
+                translation = gettext.GNUTranslations(fp)
             break
+        except IOError:
+            log.error('locale file: %s not found.', resource)
+
     else:
         translation = gettext.NullTranslations()
 
-- 
2.41.0

