From f6d16a7d9d874a56a276845cbbc1a7549e713452 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sun, 12 Nov 2023 20:01:19 -0300
Subject: [PATCH] Set-datadir to RPM packaging

---
 vita3k/app/src/app_init.cpp          |  7 ++++++-
 vita3k/emuenv/include/emuenv/state.h |  1 +
 vita3k/gui/src/gui.cpp               |  4 ++--
 vita3k/lang/src/lang.cpp             |  2 +-
 vita3k/util/include/util/fs.h        | 13 +++++++++++++
 5 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/vita3k/app/src/app_init.cpp b/vita3k/app/src/app_init.cpp
index 0626ca5..9f35a67 100644
--- a/vita3k/app/src/app_init.cpp
+++ b/vita3k/app/src/app_init.cpp
@@ -106,12 +106,15 @@ void init_paths(Root &root_paths) {
     const auto dir_sep = std::string{ fs::path::preferred_separator };
     auto base_path = SDL_GetBasePath();
     auto pref_path = SDL_GetPrefPath(org_name, app_name);
+    auto system_path = "_RPM_DATADIR_";
     root_paths.set_base_path(string_utils::utf_to_wide(base_path));
     root_paths.set_pref_path(string_utils::utf_to_wide(pref_path));
     root_paths.set_log_path(string_utils::utf_to_wide(base_path));
     root_paths.set_config_path(string_utils::utf_to_wide(base_path));
     root_paths.set_shared_path(string_utils::utf_to_wide(base_path));
     root_paths.set_cache_path(fs::path(string_utils::utf_to_wide(base_path)) / "cache" / dir_sep);
+    root_paths.set_system_path(string_utils::utf_to_wide(system_path));
+
     SDL_free(base_path);
     SDL_free(pref_path);
 
@@ -176,12 +179,13 @@ void init_paths(Root &root_paths) {
 bool init(EmuEnvState &state, Config &cfg, const Root &root_paths) {
     state.cfg = std::move(cfg);
 
-    state.base_path = root_paths.get_base_path_string();
+    state.base_path = root_paths.get_pref_path_string();
     state.default_path = root_paths.get_pref_path_string();
     state.log_path = string_utils::utf_to_wide(root_paths.get_log_path_string());
     state.config_path = string_utils::utf_to_wide(root_paths.get_config_path_string());
     state.cache_path = string_utils::utf_to_wide(root_paths.get_cache_path_string());
     state.shared_path = root_paths.get_shared_path_string();
+    state.system_path = root_paths.get_system_path_string();
 
     // If configuration does not provide a preference path, use SDL's default
     if (state.cfg.pref_path == root_paths.get_pref_path() || state.cfg.pref_path.empty())
@@ -198,6 +202,7 @@ bool init(EmuEnvState &state, Config &cfg, const Root &root_paths) {
     LOG_INFO("User config path: {}", state.config_path.string());
     LOG_INFO("User pref path: {}", state.pref_path.string());
     LOG_INFO("User cache path: {}", state.cache_path.string());
+    LOG_INFO("System shared path: {}", state.system_path.string());
 
     if (ImGui::GetCurrentContext() == NULL) {
         ImGui::CreateContext();
diff --git a/vita3k/emuenv/include/emuenv/state.h b/vita3k/emuenv/include/emuenv/state.h
index cfad521..86fb1a2 100644
--- a/vita3k/emuenv/include/emuenv/state.h
+++ b/vita3k/emuenv/include/emuenv/state.h
@@ -119,6 +119,7 @@ public:
     fs::path cache_path{};
     fs::path pref_path{};
     fs::path shared_path{};
+    fs::path system_path{};
     bool load_exec{};
     std::string load_app_path{};
     std::string load_exec_argv{};
diff --git a/vita3k/gui/src/gui.cpp b/vita3k/gui/src/gui.cpp
index 8e7ab7b..fe5930d 100644
--- a/vita3k/gui/src/gui.cpp
+++ b/vita3k/gui/src/gui.cpp
@@ -245,7 +245,7 @@ static void init_font(GuiState &gui, EmuEnvState &emuenv) {
         font_config.SizePixels = 22.f;
 
         // Set up default font path
-        const auto default_font_path{ emuenv.shared_path / "data/fonts/mplus-1mn-bold.ttf" };
+        const auto default_font_path{ emuenv.system_path / "data/fonts/mplus-1mn-bold.ttf" };
         // Check existence of default font file
         if (fs::exists(default_font_path)) {
             gui.vita_font = io.Fonts->AddFontFromFileTTF(default_font_path.string().c_str(), font_config.SizePixels, &font_config, latin_range);
@@ -273,7 +273,7 @@ vfs::FileBuffer init_default_icon(GuiState &gui, EmuEnvState &emuenv) {
     vfs::FileBuffer buffer;
 
     const auto default_fw_icon{ emuenv.pref_path / "vs0/data/internal/livearea/default/sce_sys/icon0.png" };
-    const auto default_icon{ emuenv.shared_path / "data/image/icon.png" };
+    const auto default_icon{ emuenv.system_path / "data/image/icon.png" };
 
     if (fs::exists(default_fw_icon) || fs::exists(default_icon)) {
         auto icon_path = fs::exists(default_fw_icon) ? default_fw_icon.string() : default_icon.string();
diff --git a/vita3k/lang/src/lang.cpp b/vita3k/lang/src/lang.cpp
index daa943c..0061e7e 100644
--- a/vita3k/lang/src/lang.cpp
+++ b/vita3k/lang/src/lang.cpp
@@ -68,7 +68,7 @@ void init_lang(LangState &lang, EmuEnvState &emuenv) {
     }
 
     pugi::xml_document lang_xml;
-    const auto lang_path{ emuenv.shared_path / "lang" };
+    const auto lang_path{ emuenv.system_path / "lang" };
     const auto lang_xml_path = (lang_path / (lang.user_lang[GUI] + ".xml")).string();
     if (fs::exists(lang_xml_path)) {
         if (lang_xml.load_file(lang_xml_path.c_str())) {
diff --git a/vita3k/util/include/util/fs.h b/vita3k/util/include/util/fs.h
index afb0117..565e244 100644
--- a/vita3k/util/include/util/fs.h
+++ b/vita3k/util/include/util/fs.h
@@ -29,6 +29,7 @@ class Root {
     fs::path config_path;
     fs::path shared_path;
     fs::path cache_path;
+    fs::path system_path;
 
 public:
     void set_base_path(const fs::path &p) {
@@ -102,6 +103,18 @@ public:
     std::string get_cache_path_string() const {
         return cache_path.generic_path().string();
     }
+
+    void set_system_path(const fs::path &p) {
+        system_path = p;
+    }
+
+    fs::path get_system_path() const {
+        return system_path;
+    }
+
+    std::string get_system_path_string() const {
+        return system_path.generic_path().string();
+    }
 }; // class root
 
 namespace fs_utils {
-- 
2.41.0

