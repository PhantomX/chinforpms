From be03b6cda2093b4cf1a0db6fe1ac8e18762a9812 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sat, 2 Dec 2023 17:15:45 -0300
Subject: [PATCH] cmake: change volk namespace

---
 CMakeLists.txt      |  2 +-
 cube/CMakeLists.txt | 12 ++++++------
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 451bf0d..e0203cf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -52,7 +52,7 @@ set_property(GLOBAL PROPERTY USE_FOLDERS ON)
 
 find_package(VulkanHeaders QUIET CONFIG)
 find_package(VulkanLoader QUIET CONFIG)
-find_package(volk QUIET CONFIG)
+find_package(volk_vulkan QUIET CONFIG)
 
 include(GNUInstallDirs)
 
diff --git a/cube/CMakeLists.txt b/cube/CMakeLists.txt
index 00feaf1..77fcbbc 100644
--- a/cube/CMakeLists.txt
+++ b/cube/CMakeLists.txt
@@ -217,7 +217,7 @@ elseif (ANDROID)
 
     add_subdirectory(android)
 
-    target_link_libraries(vkcube PRIVATE Vulkan::Headers volk::volk_headers)
+    target_link_libraries(vkcube PRIVATE Vulkan::Headers volk_vulkan::volk_headers)
 elseif(CMAKE_SYSTEM_NAME MATCHES "Linux|BSD")
     add_executable(vkcube)
     target_sources(vkcube PRIVATE
@@ -234,7 +234,7 @@ elseif(CMAKE_SYSTEM_NAME MATCHES "Linux|BSD")
     if (NEED_RT)
         target_link_libraries(vkcube PRIVATE rt)
     endif()
-    target_link_libraries(vkcube PRIVATE Vulkan::Headers volk::volk_headers)
+    target_link_libraries(vkcube PRIVATE Vulkan::Headers volk_vulkan::volk_headers)
 elseif(WIN32)
     add_executable(vkcube WIN32)
     target_sources(vkcube PRIVATE
@@ -244,7 +244,7 @@ elseif(WIN32)
         cube.vert.inc
         cube.frag.inc
     )
-    target_link_libraries(vkcube PRIVATE Vulkan::Headers volk::volk_headers)
+    target_link_libraries(vkcube PRIVATE Vulkan::Headers volk_vulkan::volk_headers)
 else()
     message(FATAL_ERROR "Unsupported Platform!")
 endif()
@@ -284,7 +284,7 @@ elseif(CMAKE_SYSTEM_NAME MATCHES "Linux|BSD")
                    cube.vert.inc
                    cube.frag.inc
                    ${OPTIONAL_WAYLAND_DATA_FILES})
-    target_link_libraries(vkcubepp Vulkan::Headers volk::volk_headers)
+    target_link_libraries(vkcubepp Vulkan::Headers volk_vulkan::volk_headers)
     target_compile_definitions(vkcubepp PUBLIC ${CUBE_PLATFORM})
 else()
     add_executable(vkcubepp
@@ -294,7 +294,7 @@ else()
                    ${PROJECT_SOURCE_DIR}/cube/cube.frag
                    cube.vert.inc
                    cube.frag.inc)
-    target_link_libraries(vkcubepp Vulkan::Headers volk::volk_headers)
+    target_link_libraries(vkcubepp Vulkan::Headers volk_vulkan::volk_headers)
 endif()
 target_include_directories(vkcubepp PRIVATE .)
 target_compile_definitions(vkcubepp PRIVATE VK_NO_PROTOTYPES)
@@ -336,7 +336,7 @@ if (CMAKE_SYSTEM_NAME MATCHES "Linux|BSD")
         )
         target_link_libraries(vkcube-wayland PRIVATE
             Vulkan::Headers
-            volk::volk_headers
+            volk_vulkan::volk_headers
             PkgConfig::WAYLAND_CLIENT
         )
         target_compile_definitions(vkcube-wayland PRIVATE VK_USE_PLATFORM_WAYLAND_KHR VK_NO_PROTOTYPES)
-- 
2.43.0

