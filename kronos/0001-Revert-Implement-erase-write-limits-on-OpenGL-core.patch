From 50eaaaadf22bcaf63abc553b4183f5b9c7e44299 Mon Sep 17 00:00:00 2001
From: Phantom X <PhantomX@users.noreply.github.com>
Date: Sun, 19 Feb 2023 18:33:23 -0300
Subject: [PATCH] Revert "Implement erase/write limits on OpenGL core"

This partially reverts commit f787ea8a4da454640d00d3d2e2a3528c71e21ead.
---
 .../core/video/opengl/common/src/commongl.c   | 23 +------------------
 1 file changed, 1 insertion(+), 22 deletions(-)

diff --git a/yabause/src/core/video/opengl/common/src/commongl.c b/yabause/src/core/video/opengl/common/src/commongl.c
index 3194e9ee..a7851263 100755
--- a/yabause/src/core/video/opengl/common/src/commongl.c
+++ b/yabause/src/core/video/opengl/common/src/commongl.c
@@ -2544,18 +2544,7 @@ void YglEraseWriteVDP1(int id) {
   int status = 0;
   GLenum DrawBuffers[4]= {GL_COLOR_ATTACHMENT0,GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT2,GL_COLOR_ATTACHMENT3};
   if (_Ygl->vdp1FrameBuff[0] == 0) return;
-
-  int shift = ((Vdp1Regs->TVMR & 0x1) == 1)?4:3;
-  int limits[4] = {0};
-  limits[0] = ((Vdp1Regs->EWLR>>9)&0x3F)<<shift;
-  limits[1] = ((Vdp1Regs->EWLR)&0x1FF); //TODO: manage double interlace
-
-  limits[2] = (((Vdp1Regs->EWRR>>9)&0x7F)<<shift) - 1;
-  limits[3] = ((Vdp1Regs->EWRR)&0x1FF); //TODO: manage double interlace
-
-  if ((limits[0]>=limits[2])||(limits[1]>limits[3])) return; //No erase write when invalid area - Should be done only for one dot but no idea of which dot it shall be
-
-  YglGenFrameBuffer();
+  _Ygl->vdp1On[id] = 0;
 
   glBindFramebuffer(GL_FRAMEBUFFER, _Ygl->vdp1fbo);
   int drawBuf[2] = {0};
@@ -2583,19 +2572,9 @@ void YglEraseWriteVDP1(int id) {
     }
   }
 
-  limits[0] = limits[0]*_Ygl->vdp1width/512;
-	limits[1] = _Ygl->vdp1height - (limits[1]*_Ygl->vdp1height/256) - 1 ;
-	limits[2] = limits[2]*_Ygl->vdp1width/512;
-	limits[3] = _Ygl->vdp1height - (limits[3]*_Ygl->vdp1height/256) - 1;
-
-  FRAMELOG("Clear %d %d %d %d\n", limits[0],limits[3], limits[2]-limits[0]+1, limits[1]-limits[3]+1);
-
-  glEnable(GL_SCISSOR_TEST);
-  glScissor(limits[0],limits[3], limits[2]-limits[0]+1, limits[1]-limits[3]+1);
   glClearBufferfv(GL_COLOR, 0, col);
   glClearBufferfv(GL_COLOR, 1, meshcol);
   glClearBufferfi(GL_DEPTH_STENCIL, 0, 0, 0);
-  glDisable(GL_SCISSOR_TEST);
   FRAMELOG("YglEraseWriteVDP1xx: clear %d\n", id);
   //Get back to drawframe
   glDrawBuffers(2, (const GLenum*)&drawBuf[0]);
-- 
2.39.2

